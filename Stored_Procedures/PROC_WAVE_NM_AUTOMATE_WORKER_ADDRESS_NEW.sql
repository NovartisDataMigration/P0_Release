USE [PROD_DATACLEAN]
GO
/****** Object:  StoredProcedure [dbo].[PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS]    Script Date: 26/09/2019 11:58:53 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

-- Verify that the stored procedure does not already exist.  
IF OBJECT_ID ( 'PROC_AUTOMATE_WORKER_ADDRESS_SET_EXT_FORMAT_FIELDS', 'P' ) IS NOT NULL   
    DROP PROCEDURE PROC_AUTOMATE_WORKER_ADDRESS_SET_EXT_FORMAT_FIELDS;  
GO
CREATE PROCEDURE [dbo].[PROC_AUTOMATE_WORKER_ADDRESS_SET_EXT_FORMAT_FIELDS]
AS
BEGIN
	DECLARE @SQL AS VARCHAR(4000)='drop table if exists W4_ADDRESS_TENANT_BUILD_LKUP;
	                               drop table if exists ADDRESS_FIELD_MAPPING;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;

	SELECT [Country]
		  ,[Wave]
		  ,ISNULL((SELECT TOP 1 [Country2 Code] FROM W4_PHONE_VALIDATION A1 WHERE A1.Country=A2.Country), '') [ISO2]
		  ,ISNULL((SELECT TOP 1 [Country Code] FROM W4_PHONE_VALIDATION A1 WHERE A1.Country=A2.Country), '') [ISO3]
		  ,REPLACE(REPLACE(REPLACE(ISNULL([Basic Address Format in Tenant], ''), '*Extended Format: ', ''), 'P.O.', 'PO'),'Other Address (PO Box, etc.)', 'Other Address (PO Box; etc.)') [Tenant Source Fields]
		  ,REPLACE(REPLACE(REPLACE(ISNULL([Basic Address Format in Workbook], ''), '*Extended Format: ', ''), 'P.O.', 'PO'), 'Other Address (PO Box, etc.)', 'Other Address (PO Box; etc.)') [DGW Destination Fields]
		  ,ISNULL([Ext Flag], '') [Extended Flag]
	INTO [W4_ADDRESS_TENANT_BUILD_LKUP]
	FROM [W4_ADDRESS_TENANT_BUILD_LKUP_ORI] A2

	--SELECT * FROM [W4_ADDRESS_TENANT_BUILD_LKUP] WHERE [Extended Flag]<>''
	DECLARE @FIELDS_TABLE TABLE (
	    IDX               INT,
	    COUNTRY           VARCHAR(200),
		ISO2              VARCHAR(200),
		FIELD             VARCHAR(200),
		MAP_FIELD         VARCHAR(200),
		TYPE              VARCHAR(200)  
	);

	DECLARE @Country         AS NVARCHAR(2000);
	DECLARE @Item            AS NVARCHAR(2000);
	DECLARE @ISO2            AS NVARCHAR(2000);
	DECLARE @IDX             AS INT;

	--Tenant fields
	SELECt * FROM [W4_ADDRESS_TENANT_BUILD_LKUP] WHERE [Extended Flag] = 'Ext'
	DECLARE cursor_item CURSOR FOR SELECT RTRIM(LTRIM(REPLACE(REPLACE(REPLACE([Tenant Source Fields], CHAR(13), ''), CHAR(10), ''), CHAR(9), ''))), ISO2, COUNTRY 
									  FROM [W4_ADDRESS_TENANT_BUILD_LKUP] WHERE wave='Wave 4'
	OPEN cursor_item;
	FETCH NEXT FROM cursor_item INTO @Item, @ISO2, @Country;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		 INSERT INTO @FIELDS_TABLE
		 SELECT ind, @Country, @ISO2, RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(item, CHAR(13), ''), CHAR(10), ''), CHAR(9), ''))), '', 'TENANT' FROM DBO.[fnSplitIndexOnNvarchar](@Item, ',');
		 FETCH NEXT FROM cursor_item INTO @Item, @ISO2, @Country;
	END
	CLOSE cursor_item; 
	DEALLOCATE cursor_item;

	--DGW fields
	DECLARE cursor_item CURSOR FOR SELECT RTRIM(LTRIM(REPLACE(REPLACE(REPLACE([DGW Destination Fields], CHAR(13), ''), CHAR(10), ''), CHAR(9), ''))), ISO2, COUNTRY
									  FROM [W4_ADDRESS_TENANT_BUILD_LKUP] WHERE wave='Wave 4'
	OPEN cursor_item;
	FETCH NEXT FROM cursor_item INTO @Item, @ISO2, @Country;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		 INSERT INTO @FIELDS_TABLE
		 SELECT ind, @Country, @ISO2, RTRIM(LTRIM(REPLACE(REPLACE(REPLACE(item, CHAR(13), ''), CHAR(10), ''), CHAR(9), ''))), '', 'DGW' FROM DBO.[fnSplitIndexOnNvarchar](@Item, ',');
		 FETCH NEXT FROM cursor_item INTO @Item, @ISO2, @Country;
	END
	CLOSE cursor_item; 
	DEALLOCATE cursor_item;

	-- Tenant Mapping
	SELECT DISTINCt FIELD FROM @FIELDS_TABLE WHERE TYPE='DGW'
	UPDATE @FIELDS_TABLE SET MAP_FIELD='STRAS' WHERE TYPE='TENANT' AND (FIELD='Street' OR FIELD='Street Name' OR FIELD='Street Name and Type' OR 
	                                                                    FIELD='Street or Place Name' OR FIELD='Street or Place Type' OR FIELD='Name of Street')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='POSTA' WHERE TYPE='TENANT' AND (FIELD='Apartment' OR FIELD='Apartment / Office' OR FIELD='Apartmnet')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='BLDNG' WHERE TYPE='TENANT' AND (FIELD='Building' OR FIELD='Building Number' OR FIELD='Complex')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='FLOOR' WHERE TYPE='TENANT' AND (FIELD='Floor')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='HSNMR' WHERE TYPE='TENANT' AND (FIELD='House Number')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='ORT01' WHERE TYPE='TENANT' AND (FIELD='City' OR FIELD='Neighborhood or City' OR
	                                                                    FIELD='City (Comune)' OR FIELD='City/Province' OR FIELD='Neighborhood')
    UPDATE @FIELDS_TABLE SET MAP_FIELD='ORT02' WHERE TYPE='TENANT' AND (FIELD='District' OR FIELD='Postal District')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='RCTVC' WHERE TYPE='TENANT' AND (FIELD='Municipality' OR FIELD='District (Town)')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='LAND1' WHERE TYPE='TENANT' AND (FIELD='Land' OR FIELD='County')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='PSTLZ' WHERE TYPE='TENANT' AND (FIELD='Postal Code' OR FIELD='Postcode')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='STATE' WHERE TYPE='TENANT' AND (FIELD='Province' OR FIELD='Region' OR FIELD='Reference Number' OR FIELD='Voivodeship / Province')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='ORT02' WHERE TYPE='TENANT' AND (FIELD='Postal District or City')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='POSTA' WHERE TYPE='TENANT' AND (FIELD='Apartment Block / Building')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='RCTVC' WHERE TYPE='TENANT' AND (FIELD='City/Town or Post Office')

	-- DGW fields
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine1' WHERE TYPE='DGW' AND (FIELD='Address Line 1')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine2' WHERE TYPE='DGW' AND (FIELD='Address Line 2')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine3' WHERE TYPE='DGW' AND (FIELD='Address Line 3')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine4' WHERE TYPE='DGW' AND (FIELD='Address Line 4')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine5' WHERE TYPE='DGW' AND (FIELD='Address Line 5')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine6' WHERE TYPE='DGW' AND (FIELD='Address Line 6')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine7' WHERE TYPE='DGW' AND (FIELD='Address Line 7')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine8' WHERE TYPE='DGW' AND (FIELD='Address Line 8')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_addressLine9' WHERE TYPE='DGW' AND (FIELD='Address Line 9')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_city' WHERE TYPE='DGW' AND (FIELD='City')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_region' WHERE TYPE='DGW' AND (FIELD='Region')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_postalcode' WHERE TYPE='DGW' AND (FIELD='Postal Code')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_city_subdivision' WHERE TYPE='DGW' AND (FIELD='City Subdivision 1')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_city_subdivision_1' WHERE TYPE='DGW' AND (FIELD='City Subdivision 2')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_region_subdivision_1' WHERE TYPE='DGW' AND (FIELD='Region Subdivision')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_region_subdivision_1' WHERE TYPE='DGW' AND (FIELD='Region Subdivision 1')
	UPDATE @FIELDS_TABLE SET MAP_FIELD='_region_subdivision_2' WHERE TYPE='DGW' AND (FIELD='Region Subdivision 2')

	-- Suppress redundant mapping
	PRINT 'Suppress redundant mapping';
	UPDATE A1 SET MAP_FIELD='' FROM 
	(
		SELECT * FROM (
			SELECT *, ROW_NUMBER() OVER(PARTITION BY ISO2, MAP_FIELD ORDER BY ISO2, MAP_FIELD) ROW_NO FROM @FIELDS_TABLE 
		) A2 WHERE ROW_NO >= 2
	) A1

	DECLARE @FIELDS_INFO_TABLE TABLE (
	    ISO2              VARCHAR(200),
		SRC_FIELD         VARCHAR(200), 
		SRC_MAP_FIELD     VARCHAR(200),
		DST_FIELD         VARCHAR(200), 
		DST_MAP_FIELD     VARCHAR(200)
    );

	INSERT INTO @FIELDS_INFO_TABLE
	SELECT A1.ISO2, A1.FIELD SRC_FIELD, A1.MAP_FIELD SRC_MAP_FIELD, A2.FIELD DST_FIELD, A2.MAP_FIELD DST_MAP_FIELD 
	  FROM (SELECT * FROM @FIELDS_TABLE WHERE [TYPE]='TENANT') A1 LEFT JOIN (SELECT * FROM @FIELDS_TABLE WHERE [TYPE]='DGW') A2 ON A1.IDX=A2.IDX 
	  WHERE A1.ISO2=A2.ISO2

	SELECT * INTO ADDRESS_FIELD_MAPPING FROM @FIELDS_INFO_TABLE
	--SELECT * FROM ADDRESS_FIELD_MAPPING WHERE ISO2 IN ('SK', 'EG')
END
GO
--EXEC [PROC_AUTOMATE_WORKER_ADDRESS_SET_EXT_FORMAT_FIELDS]
--SELECT * FROM ADDRESS_FIELD_MAPPING
--SELECT * FROM [W4_ADDRESS_TENANT_BUILD_LKUP] WHERE wave='Wave 4'
--SELECT DISTINCT COUNTRY FROM ADDRESS_FIELD_MAPPING
--SELECT * FROM ADDRESS_FIELD_MAPPING WHERE ISO2='BE'
--SELECT * INTO ADDRESS_FIELD_SET_MAPPING FROM ADDRESS_FIELD_MAPPING
--UPDATE [W4_ADDRESS_TENANT_BUILD_LKUP_ORI] SET [Ext Flag]=null
--UPDATE [W4_ADDRESS_TENANT_BUILD_LKUP_ORI] SET [Ext Flag]='Ext' WHERE COUNTRY IN ('Belgium'
--,'France'
--,'Germany'
--,'Italy'
--,'South Africa'
--,'Spain'
--,'Sweden'
--,'Switzerland'
--,'Turkey'
--,'Austria'
--,'Czech Republic')

--Region Mapping
IF OBJECT_ID ( 'PROC_AUTOMATE_WORKER_ADDRESS_REGION_MAPPING', 'P' ) IS NOT NULL   
    DROP PROCEDURE PROC_AUTOMATE_WORKER_ADDRESS_REGION_MAPPING;  
GO
CREATE PROCEDURE [dbo].[PROC_AUTOMATE_WORKER_ADDRESS_REGION_MAPPING]
AS
BEGIN

	DECLARE @WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID TABLE (
	     SUBTY          NVARCHAR(10), 
	     ISO2           NVARCHAR(50),
		 ISO3           NVARCHAR(50),
		 REGION         NVARCHAR(500),
		 TYPE           NVARCHAR(100),
		 REFID          NVARCHAR(100)   
	);

	DECLARE @REGION_TABLE TABLE (
	     SUBTY          NVARCHAR(10), 
	     ISO2           NVARCHAR(50),
		 ISO3           NVARCHAR(50),
		 REGION         NVARCHAR(500),
		 TYPE           NVARCHAR(100),
		 REFID          NVARCHAR(100)   
	);

	INSERT INTO @REGION_TABLE 
	  SELECT SUBTY, LAND1 ISO2, '' ISO3, STATE REGION, 'STATE' TYPE, '' REFID FROM WAVE_AM_PA0006 WHERE SUBTY='1' AND STATE IS NOT NULL
	  UNION 
	  SELECT SUBTY, LAND1 ISO2, '' ISO3, STATE REGION, 'STATE' TYPE, '' REFID FROM WAVE_AM_PA0006 WHERE SUBTY='4' AND STATE IS NOT NULL
	  UNION 
	  SELECT SUBTY, LAND1 ISO2, '' ISO3, STATE REGION, 'STATE' TYPE, '' REFID FROM WAVE_AM_PA0006 WHERE SUBTY='5' AND STATE IS NOT NULL
	  UNION 
	  SELECT SUBTY, LAND1 ISO2, '' ISO3, ORT01 REGION, 'CITY' TYPE, '' REFID FROM WAVE_AM_PA0006 WHERE SUBTY='1' AND ORT01 IS NOT NULL
	  UNION 
	  SELECT SUBTY, LAND1 ISO2, '' ISO3, ORT01 REGION, 'CITY' TYPE, '' REFID FROM WAVE_AM_PA0006 WHERE SUBTY='4' AND ORT01 IS NOT NULL
	  UNION 
	  SELECT SUBTY, LAND1 ISO2, '' ISO3, ORT01 REGION, 'CITY' TYPE, '' REFID FROM WAVE_AM_PA0006 WHERE SUBTY='5' AND ORT01 IS NOT NULL

    UPDATE A1 
	   SET ISO3=[COUNTRY CODE]
	   FROM @REGION_TABLE A1 JOIN W4_PHONE_VALIDATION A2 ON A1.ISO2=A2.[Country2 Code]

	--SELECT * FROM REGION_MAPPING_MASTER WHERE [alpha2code]='IT'
	--SELECT * FROM HRCORE_REGION_TEXT WHERE REGION='MI'
    UPDATE A1 
	     SET REFID=A2.referenceID
	  FROM @REGION_TABLE A1 JOIN (SELECT A1.Country, A1.Region, A2.referenceID 
	                                 FROM HRcore_Region_Text A1 
	                                 LEFT JOIN region_mapping_master A2 ON A1.Country=A2.alpha2code AND (A1.Description=A2.Name OR A1.Description=A2.Description)) A2
	          ON A1.ISO2=A2.Country AND A1.REGION=A2.Region
      WHERE TYPE='STATE'

    UPDATE A1 
	     SET REFID=A2.referenceID
	  FROM  @REGION_TABLE A1 JOIN (SELECT A1.Country, A1.Description, A2.referenceID 
	                                  FROM HRcore_Region_Text A1 
									  LEFT JOIN region_mapping_master A2 ON A1.Country=A2.alpha2code AND (A1.Description=A2.Name OR A1.Description=A2.Description)) A2
	          ON A1.ISO2=A2.Country AND A1.REGION=A2.Description
      WHERE TYPE='CITY'

    UPDATE A1 
	     SET REFID=A2.RegionID
	  FROM  @REGION_TABLE A1 JOIN W2_P2_REGION_WORKDAY A2 ON A1.ISO3=A2.countrycode3 AND A1.REGION=A2.Region

	UPDATE @REGION_TABLE SET REFID= 'ITA-MI' WHERE ISO2='IT' AND REGION='MI' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-RM' WHERE ISO2='IT' AND REGION='RM' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-NA' WHERE ISO2='IT' AND REGION='NA' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-MA' WHERE ISO2='IT' AND REGION='MA' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-FI' WHERE ISO2='IT' AND REGION='FI' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-TO' WHERE ISO2='IT' AND REGION='TO' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-VE' WHERE ISO2='IT' AND REGION='VE' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-MB' WHERE ISO2='IT' AND REGION='MB' AND TYPE='STATE';
	UPDATE @REGION_TABLE SET REFID= 'ITA-CL' WHERE ISO2='IT' AND REGION='CL' AND TYPE='STATE';
	--Kyiv Oblast UA-32
	UPDATE @REGION_TABLE SET REFID= 'UKR-32' WHERE ISO2='UA' AND REGION='KIE' AND TYPE='STATE';

	INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'El Giza','City','EGY-GZ');
    INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'Eldaqahlya','City','EGY-DK');
    INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'El-Menoufia','City','EGY-MNF');
    INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'El-Menya','City','EGY-MNF');
    INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'New Cairo','City','EGY-C');
    INSERT INTO @REGION_TABLE VALUES ('1','UA','UKR',N'Київ','City','UKR-30');
    INSERT INTO @REGION_TABLE VALUES ('1','UA','UKR',N'м. Ірпінь','City','UKR-35');
    INSERT INTO @REGION_TABLE VALUES ('1','UA','UKR',N'м. Львів','City','UKR-46');
    INSERT INTO @REGION_TABLE VALUES ('1','UA','UKR',N'м. Харків','City','UKR-63');
    INSERT INTO @REGION_TABLE VALUES ('1','UA','UKR',N'с. Лушники, Шосткинського р-н,Сумської о','City','UKR-63');

	INSERT INTO @REGION_TABLE VALUES ('5','AE','ARE',N'AbuDhabi','City','ARE-AZ');
	INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'Alexanderia','City','EGY-ALX');
	INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'Tanta','City','EGY-GH');
	INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'Guiza','City','EGY-GZ');
	INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'Sohag','City','EGY-SHG');
	INSERT INTO @REGION_TABLE VALUES ('1','EG','EGY',N'Sohag','City','EGY-SHG');
	INSERT INTO @REGION_TABLE VALUES ('5','EG','EGY',N'Sharkiya','City','EGY-SHR');
	INSERT INTO @REGION_TABLE VALUES ('1','UA','UKR',N'MIK','State','UKR-48');
	INSERT INTO @REGION_TABLE VALUES ('1','UA','UKR',N'ODS','State','UKR-51');

	INSERT INTO @REGION_TABLE VALUES ('4','UA','UKR',N'Kyiv','City','UKR-35');
	INSERT INTO @REGION_TABLE VALUES ('4','IT','ITA',N'Legnano','City','ITA-MI');
	INSERT INTO @REGION_TABLE VALUES ('4','IT','ITA',N'Bergamo','City','ITA-BG');
	INSERT INTO @REGION_TABLE VALUES ('4','IT','ITA',N'Origgio','City','ITA-VA');
	INSERT INTO @REGION_TABLE VALUES ('4','IT','ITA',N'Azzate','City','ITA-VA');
	INSERT INTO @REGION_TABLE VALUES ('4','EG','EGY',N'Sharkiya','City','EGY-SHR');        --Sharkiya
	INSERT INTO @REGION_TABLE VALUES ('4','EG','EGY',N'Talkha- Dakahlia','City','EGY-DK');

--Sharkiya
--84000839
--ARE
--Casablanca
--(Hard Code COuntry to MAR) so we dont need Region for MAR

    --SELECT * FROM WAVE_REGION_MAPPING_ADDRESS WHERE TYPE='CITY' ORDEr BY ISO3
	
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH 'drop table if exists WAVE_REGION_MAPPING_ADDRESS;';
	SELECT * INTO WAVE_REGION_MAPPING_ADDRESS FROM @REGION_TABLE WHERE ISNULL(REFID, '') <> '' ORDER BY ISO2

	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH 'drop table if exists WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID;';
    SELECT PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA, RCTVC 
	INTO WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID FROM WAVE_AM_PA0006
	WHERE PERNR IN (
			SELECT [EmployeeID]
			   FROM WD_HR_TR_WorkerAddress
			   WHERe ISNULL([PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE], '') <> '' AND ISNULL([PRIMARYHOMEADDRESSDATA_STATE(REGION)], '') = '' AND
							[PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')) AND SUBTY='1'

	INSERT INTO WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID
    SELECT PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA, RCTVC 
	FROM WAVE_AM_PA0006
	WHERE PERNR IN (
			SELECT [EmployeeID]
			   FROM WD_HR_TR_WorkerAddress
			   WHERe ISNULL([PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE], '') <> '' AND ISNULL([PRIMARYHOMEADDRESSDATA_STATE(REGION)], '') = '' AND
							[PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')) AND SUBTY='4'

	INSERT INTO WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID
	SELECT PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA, RCTVC FROM WAVE_AM_PA0006
	WHERE PERNR IN (
			SELECT [EmployeeID]
			   FROM WD_HR_TR_WorkerAddress
			   WHERe ISNULL([HomeAddress2Data_CountryISOCode], '') <> '' AND ISNULL([HomeAddress2Data_State(Region)], '') = '' AND
							[HomeAddress2Data_CountryISOCode] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')) AND SUBTY='5'

	INSERT INTO WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID
	SELECT PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA, RCTVC FROM WAVE_AM_PA0006
	WHERE PERNR IN (
			SELECT [EmployeeID]
			   FROM WD_HR_TR_WorkerAddress
			   WHERe ISNULL([Home_Address_Local1Data_ISO_Code], '') <> '' AND ISNULL([Home_Address_Local1Data_REGION_ID], '') = '' AND
							[Home_Address_Local1Data_ISO_Code] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')) AND SUBTY='1'

	INSERT INTO WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID
	SELECT PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA, RCTVC FROM WAVE_AM_PA0006
	WHERE PERNR IN (
			SELECT [EmployeeID]
			   FROM WD_HR_TR_WorkerAddress
			   WHERe ISNULL([Home_Address_Local2Data_ISO_Code], '') <> '' AND ISNULL([Home_Address_Local2Data_REGION_ID], '') = '' AND
							[Home_Address_Local2Data_ISO_Code] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')) AND SUBTY='5'

	--SELECT * FROM WAVE_REGION_MAPPING_ADDRESS WHERE REGION='Dubai' ORDER BY ISO2
	--SELECT * FROM WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID ORDER BY ISO2
	--SELECt * FROM HRCORE_REGION_TEXT WHERe COUNTRY='UA'
	--SELECT * FROM W2_P2_REGION_WORKDAY WHERE COUNTRYcode3 LIKE 'UKR%'
	--SELECT * FROM REGION_MAPPING_MASTER WHERE alpha3code='UKR'
	--SELECT * FROM REGION_MAPPING_MASTER WHERE ISNULL(Description, '') <> ''
	--Dnipropetrovs'ka, Dnipropetrovsk Oblast
	--Alexanderia
	--Dubai,AE,AE,Dubai,
	--SELECT * FROM WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID
	--SELECT * FROM WAVE_REGION_MAPPING_ADDRESS_MISSING_REFID
END
GO
--Sharkiya
--EXEC PROC_AUTOMATE_WORKER_ADDRESS_REGION_MAPPING
--SELECT * FROM REGION_MAPPING_LKUP

-- Verify that the stored procedure does not already exist.  
IF OBJECT_ID ( 'PROC_AUTOMATE_WORKER_ADDRESS_EXECUTE_EXT_FORMAT', 'P' ) IS NOT NULL   
    DROP PROCEDURE PROC_AUTOMATE_WORKER_ADDRESS_EXECUTE_EXT_FORMAT;  
GO
CREATE PROCEDURE [dbo].[PROC_AUTOMATE_WORKER_ADDRESS_EXECUTE_EXT_FORMAT]
    @WhichDate                  VARCHAR(20),
	@SUBTY                      VARCHAR(20)
AS
BEGIN
	DECLARE @SQL AS NVARCHAR(MAX)='drop table if exists ADDRESS_PA0006;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

--SELECT * FROM [SET_ADDRESS_FIELD_MAPPING]
--SELECT * FROM W4_POLAND_DISTRICT_LKUP
--SELECT * FROM W4_ITALY_STREET_NUMBER_LKUP

	SELECT DISTINCT
		A1.PERNR,
		SUBTY,	
		cast(ENDDA as nvarchar(255)) as EndDate,
		cast(BEGDA as nvarchar(255)) as StartDate,
		ANSSA,
		NAME2,
		STRAS,
		IIF((A1.ORT01 IS NULL AND A1.COUNC IS NOT NULL), A6.CITY, IIF(A1.ORT01 IS NOT NULL, A1.ORT01, '')) ORT01,
		ORT02,
		RCTVC,
		PSTLZ,
		LAND1,
		TELNR,
		WKWNG,
		BUSRT,
		LOCAT,
		ADR03,
		ADR04,
		(CASE 
		    WHEN (@SUBTY='1') THEN IIF(ISNULL((SELECT TOP 1 REFID FROM WAVE_REGION_MAPPING_ADDRESS A8 WHERE A8.ISO2=A1.LAND1 AND A8.REGION=ISNULL(A1.STATE,N'') AND A8.TYPE='STATE'),N'')=N'',
			                           ISNULL((SELECT TOP 1 REFID FROM WAVE_REGION_MAPPING_ADDRESS A8 WHERE A8.ISO2=A1.LAND1 AND A8.REGION=ISNULL(A1.ORT01,N'') AND A8.TYPE='CITY'),N''),
									   ISNULL((SELECT TOP 1 REFID FROM WAVE_REGION_MAPPING_ADDRESS A8 WHERE A8.ISO2=A1.LAND1 AND A8.REGION=ISNULL(A1.STATE,N'') AND A8.TYPE='STATE'),N'')) 
			WHEN (@SUBTY='2') THEN IIF(ISNULL((SELECT TOP 1 REFID FROM WAVE_REGION_MAPPING_ADDRESS A8 WHERE A8.ISO2=A1.LAND1 AND A8.REGION=ISNULL(A1.STATE,N'') AND A8.TYPE='STATE'),N'')=N'',
			                           ISNULL((SELECT TOP 1 REFID FROM WAVE_REGION_MAPPING_ADDRESS A8 WHERE A8.ISO2=A1.LAND1 AND A8.REGION=ISNULL(A1.ORT01,N'') AND A8.TYPE='CITY'),N''),
									   ISNULL((SELECT TOP 1 REFID FROM WAVE_REGION_MAPPING_ADDRESS A8 WHERE A8.ISO2=A1.LAND1 AND A8.REGION=ISNULL(A1.STATE,N'') AND A8.TYPE='STATE'),N'')) 
			WHEN (@SUBTY='3') THEN ''
			WHEN (@SUBTY='4') THEN ''
			ELSE ''
		END) STATE,
		HSNMR,
		POSTA,
		BLDNG,
		FLOOR,
		STRDS,
		COM01,
		NUM01,
		COM02,
		NUM02,
		COM03,
		NUM03,
		IIF(A1.COUNC IS NOT NULL, A6.CITY, '') COUNC,
		OR1KK,
		OR2KK,
		CONKK,
		A3.CTR,
		A3.CCD,
		A3.MC,
		A3.[DESCRIPTION] PL_DISTRICT,
		A4.CC,
		A4.CITY,
		A4.REG,
		A4.[STREETNUM] IT_STREETNUM,
		[FIELD_TYPE],
		[ROW_NUM]
    INTO ADDRESS_PA0006
    FROM [dbo].[WAVE_AM_PA0006] A1
	JOIN WAVE_AM_SUP_ORG_SOURCE A2 ON A1.pernr = A2.persno
	LEFT JOIN COUNC_CITY_LKUP A6 ON A1.LAND1=A6.CC AND A1.COUNC=A6.COUNC
	LEFT JOIN W4_POLAND_DISTRICT_LKUP A3 ON A1.LAND1=A3.CTR AND A1.COUNC=A3.CCD AND A1.RCTVC=A3.MC
	LEFT JOIN W4_ITALY_STREET_NUMBER_LKUP A4 ON A1.LAND1=A4.CC AND A1.ORT01=A4.CITY AND A1.STATE=A4.RG	
	WHERE begDa<=CAST(@WhichDate as date) AND endda>=CAST(@WhichDate as date) AND ROW_NUM = @SUBTY AND 
	      LAND1 IN (SELECT DISTINCT ISO2 FROM [SET_ADDRESS_FIELD_MAPPING_DONE])
	IF (@SUBTY='1')
	BEGIN
		SET @SQL='drop table if exists PRIMARY_ADDRESS_PA0006;';
		EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

        SELECT * INTO PRIMARY_ADDRESS_PA0006 FROM ADDRESS_PA0006
	END
	IF (@SUBTY='2')
	BEGIN
		SET @SQL='drop table if exists SECONDARY_ADDRESS_PA0006;';
		EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

        SELECT * INTO SECONDARY_ADDRESS_PA0006 FROM ADDRESS_PA0006
	END

    DECLARE @CC                  AS  VARCHAR(10);
	DECLARE @ISO2                AS  VARCHAR(10);
	DECLARE @SrcFields           AS  VARCHAR(100);
	DECLARE @SrcMapFields        AS  VARCHAR(100);
	DECLARE @DstMapFields        AS  VARCHAR(100);
	DECLARE @DstField            AS  VARCHAR(100);
	DECLARE @OPR                 AS  VARCHAR(100);
	DECLARE @SET                 AS  VARCHAR(MAX);
	DECLARE @ADR                 AS  VARCHAR(MAX);
	DECLARE @EMPTY               AS  VARCHAR(MAX);
	DECLARE @Field               AS  VARCHAR(100);

    DECLARE @MunicipalityCity    AS  VARCHAR(50);
	DECLARE @CitySubDivision     AS  VARCHAR(50);
	DECLARE @SubRegion           AS  VARCHAR(50);
	DECLARE @PostalCode          AS  VARCHAR(50);
	
	--SELECT * FROM [SET_ADDRESS_FIELD_MAPPING_DONE] WHERE ISO2='HU'
	--SELECT PERNR, LOCAT FROM [W4_P2_PA0006] WHERE LAND1='HU'
	DECLARE cursor_iso2 CURSOR FOR 
	      SELECT DISTINCT ISO2 FROM [SET_ADDRESS_FIELD_MAPPING_DONE] --WHERE ISNULL([Extended Flag], '') <> ''
	OPEN cursor_iso2; 
	FETCH NEXT FROM cursor_iso2 INTO @CC;
 
	WHILE @@FETCH_STATUS = 0
	BEGIN
	    SET @SET=''; 
		SET @ADR='';
		SET @SQL='';
		DECLARE cursor_field CURSOR FOR 
			  SELECT ISO2, SRC_FIELD, SRC_MAP_FIELD, DST_FIELD, DST_MAP_FIELD, OPERATION FROM [SET_ADDRESS_FIELD_MAPPING_DONE] WHERE ISO2=@CC ORDER BY DST_MAP_FIELD, [INDEX];
		OPEN cursor_field; 
		FETCH NEXT FROM cursor_field INTO @ISO2, @SrcFields, @SrcMapFields, @DstField, @DstMapFields, @OPR;
 
		WHILE @@FETCH_STATUS = 0
		BEGIN
	        IF (ISNULL(@SrcMapFields, '') <> '')
			BEGIN
			    IF (ISNULL(@OPR, '') = 'ADD' OR ISNULL(@OPR, '') = 'ADD_MAPPING')
				BEGIN
					IF @ADR <> '' SET @ADR=@ADR+'+'':''+';
					SET @ADR=@ADR+' ISNULL('+@SrcMapFields+','''')';
					IF (ISNULL(@OPR, '') = 'ADD_MAPPING')
					BEGIN
						IF @SET <> '' SET @SET=@SET+', ';
						SET @SET=@SET+'A1.#FIELD_TYPE#'+@DstMapFields+' = REPLACE(REPLACE(REPLACE('+@ADR+', '':'', ''~:''), '':~'', ''''), ''~:'', '','')';
						SET @ADR='';
					END
				END
				ELSE
				BEGIN
					IF @SET <> '' SET @SET=@SET+', ';
					SET @SET=@SET+'A1.#FIELD_TYPE#'+@DstMapFields+' = '+@SrcMapFields+'';
				END
			END
			FETCH NEXT FROM cursor_field INTO @ISO2, @SrcFields, @SrcMapFields, @DstField, @DstMapFields, @OPR;
		END

		CLOSE cursor_field; 
		DEALLOCATE cursor_field;

		--Executes the created update statement
		PRINT @CC;
		SET @Field=(CASE 
		               WHEN (@SUBTY='1') THEN 'primary'
					   WHEN (@SUBTY='2') THEN 'secondary'
					   WHEN (@SUBTY='3') THEN 'third'
					   WHEN (@SUBTY='4') THEN 'fourth'
					   ELSE ''
					END);
		SET @SQL='UPDATE A1 SET '+@Field+'_effective_date=StartDate, '+@Field+'_country=LAND1, ' + REPLACE(@SET, '#FIELD_TYPE#', ''+@Field+'') +' 
		              FROM WAVE_AM_address_source_data A1 
					       JOIN ADDRESS_PA0006 A2 ON A1.PERSNO=A2.PERNR 
					  WHERE A2.ROW_NUM='+@SUBTY+' AND A2.LAND1='''+@CC+'''';
		PRINT @SQL;
        EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

		FETCH NEXT FROM cursor_iso2 INTO @CC;
	END

	CLOSE cursor_iso2; 
	DEALLOCATE cursor_iso2;
END
GO
--SELECT * FROM WAVE_AM_address_source
--SELECT * FROM W4_ADDRESS_VALIDATION
--SELECT * FROM WAVE_AM_address_source_data WHERE PERSNO='24000862'
--SELECT * FROM WAVE_AM_SUP_ORG_SOURCE WHERE PERSNO='24000862'
--SELECT * FROM [WAVE_AM_PA0006] WHERE PERNR='24000862'   
--SELECT * FROM [PRIMARY_ADDRESS_PA0006] WHERE PERNR='84000839'   
--SELECT * FROM [PRIMARY_ADDRESS_PA0006] WHERE LAND1='EG'   


-- Verify that the stored procedure does not already exist.  
IF OBJECT_ID ( 'PROC_AUTOMATE_WORKER_ADDRESS_SET_SUB_TYPE_1AND5', 'P' ) IS NOT NULL   
    DROP PROCEDURE PROC_AUTOMATE_WORKER_ADDRESS_SET_SUB_TYPE_1AND5;  
GO
CREATE PROCEDURE [dbo].[PROC_AUTOMATE_WORKER_ADDRESS_SET_SUB_TYPE_1AND5]
    @WhichDate      AS  VARCHAR(10)
AS
BEGIN
    --SELECT * FROM W4_ADDRESS_VALIDATION
    /* Correction required before interchange of 1 and 5 sub type */
		UPDATE A1
	  SET A1.ORG_COMPANY=A2.[Org - Company Code],
	      A1.CC=A2.[Geo - Work Country],
		  A1.Emp_Group=A2.[Emp - Group]
	FROM WAVE_AM_PA0006 A1 JOIN WAVE_AM_POSITION_MANAGEMENT A2 ON A1.PERNR=A2.[EMP - PERSONNEL NUMBER]

	UPDATE A1
	  SET A1.ORG_COMPANY=A2.[Org - Company Code]
	FROM WAVE_SINGAPORE_PC_CORRECTIONS A1 JOIN WAVE_AM_POSITION_MANAGEMENT A2 ON A1.[EMP - PERSONNEL NUMBER]=A2.[EMP - PERSONNEL NUMBER]
	DELETE FROM WAVE_AM_PA0006 WHERE ORG_COMPANY='SG11' AND PERNR NOT IN (SELECT DISTINCT [EMP - PERSONNEL NUMBER] FROM WAVE_SINGAPORE_PC_CORRECTIONS WHERE ORG_COMPANY='SG11')

	UPDATE WAVE_AM_PA0006 SET STATE='KLN' WHERE LAND1='HK' AND PERNR='27000659'
    UPDATE WAVE_AM_PA0006 SET STATE='NT' WHERE LAND1='HK' AND PERNR='27000713'

	UPDATE WAVE_AM_PA0006 SET ORT01='NT' WHERE LAND1='HK' AND PERNR='27000713'
	UPDATE WAVE_AM_PA0006 SET ORT01='Tuen Mun' WHERE PERNR = '27000182'
	UPDATE WAVE_AM_PA0006 SET ORT01='Ma On Shan' WHERE PERNR = '27000420'
	UPDATE WAVE_AM_PA0006 SET ORT01='Kowloon' WHERE PERNR = '27000453'
	UPDATE WAVE_AM_PA0006 SET ORT01='Hong Kong' WHERE PERNR = '27000476'
	UPDATE WAVE_AM_PA0006 SET ORT01='Kowloon' WHERE PERNR = '27000493'
	UPDATE WAVE_AM_PA0006 SET ORT01='Kowloon' WHERE PERNR = '27000516'
	UPDATE WAVE_AM_PA0006 SET ORT01='Hong Kong' WHERE PERNR = '27000535'
	UPDATE WAVE_AM_PA0006 SET ORT01='Tsuen Wan' WHERE PERNR = '27000545'
	UPDATE WAVE_AM_PA0006 SET ORT01='Yuen Long' WHERE PERNR = '27000566'
	UPDATE WAVE_AM_PA0006 SET ORT01='Kowloon' WHERE PERNR = '27000572'
	UPDATE WAVE_AM_PA0006 SET ORT01='Kowloon' WHERE PERNR = '27000575'
	UPDATE WAVE_AM_PA0006 SET ORT01='Hong Kong' WHERE PERNR = '27000597'
	UPDATE WAVE_AM_PA0006 SET ORT01='Kowloon' WHERE PERNR = '27000611'
	UPDATE WAVE_AM_PA0006 SET ORT01='Hong Kong' WHERE PERNR = '27000667'
	UPDATE WAVE_AM_PA0006 SET ORT01='Fanling' WHERE PERNR = '27000713'

	UPDATE WAVE_AM_PA0006 SET ORT01='Senjulung' WHERE PERNR = '34006198'
	UPDATE WAVE_AM_PA0006 SET ORT01='Batu Aji' WHERE PERNR = '34006200'
	UPDATE WAVE_AM_PA0006 SET ORT01='Senjulung' WHERE PERNR = '34006238'
	UPDATE WAVE_AM_PA0006 SET ORT01='Dsn Jamblangan' WHERE PERNR = '34006721'

	UPDATE WAVE_AM_PA0006 SET COUNC='000' WHERE PERNR = '42003476'
	UPDATE WAVE_AM_PA0006 SET COUNC='000' WHERE PERNR = '42100619'
	UPDATE WAVE_AM_PA0006 SET COUNC='015' WHERE PERNR = '42004857'
	UPDATE WAVE_AM_PA0006 SET COUNC='000' WHERE PERNR = '42100632'

	UPDATE WAVE_AM_PA0006 SET LAND1='MY' WHERE PERNR='25000540' AND SUBTY='1'
	UPDATE WAVE_AM_PA0006 SET LAND1='MY' WHERE PERNR='25002381' AND SUBTY='1'
	UPDATE WAVE_AM_PA0006 SET LAND1='MY' WHERE PERNR='25003014' AND SUBTY='1'
	UPDATE WAVE_AM_PA0006 SET LAND1='IN' WHERE PERNR='40023791' AND SUBTY='5'

	-- Moving LOCAT to STRAS, If STRAS is null and LOCAT is not null.
	UPDATE WAVE_AM_PA0006 SET STRAS=LOCAT WHERE (ISNULL(STRAS, '')='' AND ISNULL(LOCAT, '') <> '')
	UPDATE WAVE_AM_PA0006 SET LOCAT='' WHERE (ISNULL(STRAS, '')=ISNULL(LOCAT, ''))		
	
	PRINT 'STATE Deletion'
	--SELECT * FROM WAVE_CHINA_ADDRESS_CORRECTIONS
	DELETE FROM WAVE_AM_PA0006 
	   WHERE (LAND1='CN' AND SUBTY='1' AND STATE IS NULL AND 
	          PERNR NOT IN (SELECT PERSNO FROM [WAVE_CHINA_ADDRESS_CORRECTIONS] WHERE [ADDRESS RECORD TYPE]='Permanent residence'))
    DELETE FROM WAVE_AM_PA0006 
	   WHERE (LAND1='CN' AND SUBTY='5' AND STATE IS NULL AND 
	          PERNR NOT IN (SELECT PERSNO FROM [WAVE_CHINA_ADDRESS_CORRECTIONS] WHERE [ADDRESS RECORD TYPE]='Mailing address'))

    PRINT 'SUB TYPE 1 AND 5';

	UPDATE A1 SET
		ANSSA=null,
		NAME2=null,
		STRAS=null,
		ORT01=null,
		ORT02=null,
		RCTVC=null,
		PSTLZ=null,
		LAND1=null,
		TELNR=null,
		WKWNG=null,
		BUSRT=null,
		LOCAT=null,
		ADR03=null,
		ADR04=null,
		STATE=null,
		HSNMR=null,
		POSTA=null,
		BLDNG=null,
		FLOOR=null,
		STRDS=null,
		COM01=null,
		NUM01=null,
		COM02=null,
		NUM02=null,
		COM03=null,
		NUM03=null,
		COUNC=null,
		OR1KK=null,
		OR2KK=null,
		CONKK=null
	 FROM WAVE_AM_PA0006 A1
	 WHERE A1.begDa<=CAST(@WhichDate as date) and A1.endda>=CAST(@WhichDate as date) AND (A1.SUBTY='1' OR A1.SUBTY='5') AND LAND1='RU'


	DECLARE @SUB_TYPE_1AND5 TABLE (
		PERNR     NVARCHAR(255),
		SUBTY     NVARCHAR(255),	
		ENDDA     NVARCHAR(255),
		BEGDA     NVARCHAR(255),
		ANSSA     NVARCHAR(255),
		NAME2     NVARCHAR(255),
		STRAS     NVARCHAR(2000),
		ORT01     NVARCHAR(255),
		ORT02     NVARCHAR(255),
		RCTVC     NVARCHAR(255),
		PSTLZ     NVARCHAR(255),
		LAND1     NVARCHAR(255),
		TELNR     NVARCHAR(255),
		WKWNG     NVARCHAR(255),
		BUSRT     NVARCHAR(255),
		LOCAT     NVARCHAR(2000),
		ADR03     NVARCHAR(255),
		ADR04     NVARCHAR(255),
		STATE     NVARCHAR(255),
		HSNMR     NVARCHAR(255),
		POSTA     NVARCHAR(255),
		BLDNG     NVARCHAR(255),
		FLOOR     NVARCHAR(255),
		STRDS     NVARCHAR(255),
		COM01     NVARCHAR(255),
		NUM01     NVARCHAR(255),
		COM02     NVARCHAR(255),
		NUM02     NVARCHAR(255),
		COM03     NVARCHAR(255),
		NUM03     NVARCHAR(255),
		COUNC     NVARCHAR(255),
		OR1KK     NVARCHAR(255),
		OR2KK     NVARCHAR(255),
		CONKK     NVARCHAR(255)
	)

	INSERT INTO @SUB_TYPE_1AND5
	SELECT A2.* FROM 
	(SELECT DISTINCT
		PERNR,
		SUBTY,	
		cast(ENDDA as nvarchar(255)) as EndDate,
		cast(BEGDA as nvarchar(255)) as StartDate,
		ANSSA as Type,
		NAME2 as CareofName,
		STRAS as Street,
		ORT01 as City,
		ORT02 as District,
		RCTVC as municipality,
		PSTLZ as PostalCode,
		LAND1 as Country,
		TELNR as Phone,
		WKWNG as CH,
		BUSRT as Bus,
		LOCAT as AddressLine2,
		ADR03 as Street2,
		ADR04 as Street3,
		STATE as Region,
		HSNMR as Houseno,
		POSTA as Apartment,
		BLDNG as Buildings,
		FLOOR as Floor,
		STRDS as SA,
		COM01 as PhoneType1,
		NUM01 as PhoneNumber1,
		COM02 as PhoneType2,
		NUM02 as PhoneNumber2,
		COM03 as PhoneType3,
		NUM03 as PhoneNumber3,
		COUNC as Prefecture,
		OR1KK,
		OR2KK,
		CONKK
	 FROM WAVE_AM_PA0006 WHERE begDa<=CAST(@WhichDate as date) and endda>=CAST(@WhichDate as date) AND SUBTY = '1') A1 JOIN 
	(SELECT DISTINCT
		PERNR,
		SUBTY,	
		cast(ENDDA as nvarchar(255)) as EndDate,
		cast(BEGDA as nvarchar(255)) as StartDate,
		ANSSA as Type,
		NAME2 as CareofName,
		STRAS as Street,
		ORT01 as City,
		ORT02 as District,
		RCTVC as municipality,
		PSTLZ as PostalCode,
		LAND1 as Country,
		TELNR as Phone,
		WKWNG as CH,
		BUSRT as Bus,
		LOCAT as AddressLine2,
		ADR03 as Street2,
		ADR04 as Street3,
		STATE as Region,
		HSNMR as Houseno,
		POSTA as Apartment,
		BLDNG as Buildings,
		FLOOR as Floor,
		STRDS as SA,
		COM01 as PhoneType1,
		NUM01 as PhoneNumber1,
		COM02 as PhoneType2,
		NUM02 as PhoneNumber2,
		COM03 as PhoneType3,
		NUM03 as PhoneNumber3,
		COUNC as Prefecture,
		OR1KK,
		OR2KK,
		CONKK
	 FROM WAVE_AM_PA0006 WHERE begDa<=CAST(@WhichDate as date) and endda>=CAST(@WhichDate as date) AND SUBTY = '5') A2
	 ON A1.PERNR=A2.PERNR
	 WHERE ((ISNULL(A1.Street, '')='' AND ISNULL(A1.AddressLine2, '')='') AND (ISNULL(A2.Street, '')<>'' OR ISNULL(A2.AddressLine2, '')<>''))

    UPDATE A1 SET
		ANSSA=A2.ANSSA,
		NAME2=A2.NAME2,
		STRAS=A2.STRAS,
		ORT01=A2.ORT01,
		ORT02=A2.ORT02,
		RCTVC=A2.RCTVC,
		PSTLZ=A2.PSTLZ,
		LAND1=A2.LAND1,
		TELNR=A2.TELNR,
		WKWNG=A2.WKWNG,
		BUSRT=A2.BUSRT,
		LOCAT=A2.LOCAT,
		ADR03=A2.ADR03,
		ADR04=A2.ADR04,
		STATE=A2.STATE,
		HSNMR=A2.HSNMR,
		POSTA=A2.POSTA,
		BLDNG=A2.BLDNG,
		FLOOR=A2.FLOOR,
		STRDS=A2.STRDS,
		COM01=A2.COM01,
		NUM01=A2.NUM01,
		COM02=A2.COM02,
		NUM02=A2.NUM02,
		COM03=A2.COM03,
		NUM03=A2.NUM03,
		COUNC=A2.COUNC,
		OR1KK=A2.OR1KK,
		OR2KK=A2.OR2KK,
		CONKK=A2.CONKK
	 FROM WAVE_AM_PA0006 A1 JOIN @SUB_TYPE_1AND5 A2 ON A1.PERNR=A2.PERNR
	 WHERE A1.begDa<=CAST(@WhichDate as date) and A1.endda>=CAST(@WhichDate as date) AND A1.SUBTY='1'
	 --SELECT * FROM WAVE_AM_PA0006 WHERE ROW_NUM IN (3, 4)

	 DELETE FROM WAVE_AM_PA0006 WHERE PERNR IN (SELECT PERNR FROM @SUB_TYPE_1AND5) AND begDa<=CAST(@WhichDate as date) AND endda>=CAST(@WhichDate as date) AND SUBTY='5'

	 DECLARE @WD_HR_TR_WORKERADDRESS_EMPGROUP_0304 TABLE (
	    PERNR               NVARCHAR(200),
		PERNR_NEW           NVARCHAR(200)
	 );
	 INSERT INTO @WD_HR_TR_WORKERADDRESS_EMPGROUP_0304
	 SELECT DISTINCT [Emp - Personnel Number], PERSNO_NEW FROM 
		(SELECT [Emp - Personnel Number], PERSNO_NEW, ROW_NUMBER() OVER(PARTITION BY PERSNO_NEW ORDER BY PERSNO_NEW, [Emp - Group]) AS [ROW] 
		    FROM WAVE_AM_POSITION_MANAGEMENT 
			WHERE [Emp - Group] IN ('3', '4')) A1
		WHERE [ROW]=2;
	 --SELECT * FROM WAVE_AM_PA0006 A1 JOIN @WD_HR_TR_WORKERADDRESS_EMPGROUP_0304 A2 ON A1.PERNR=A2.PERNR   --Commented

	 UPDATE A1
	     SET SUBTY=(CASE
		               WHEN SUBTY='1' THEN '6'
					   WHEN SUBTY='5' THEN '7'
					   WHEN SUBTY='4' THEN '8'
					   ELSE SUBTY
					END)
	 FROM WAVE_AM_PA0006 A1 JOIN @WD_HR_TR_WORKERADDRESS_EMPGROUP_0304 A2 ON A1.PERNR=A2.PERNR

	 UPDATE A1
	     SET PERNR=A2.PERNR_NEW
	 FROM WAVE_AM_PA0006 A1 JOIN @WD_HR_TR_WORKERADDRESS_EMPGROUP_0304 A2 ON A1.PERNR=A2.PERNR

	 UPDATE A1 SET 
	     [ROW_NUM]=A2.[ROW],
		 [FIELD_TYPE]=(CASE
		                  WHEN A2.[ROW]=1 THEN 'primary'
						  WHEN A2.[ROW]=2 THEN 'secondary'
						  WHEN A2.[ROW]=3 THEN 'third'
						  WHEN A2.[ROW]=4 THEN 'fourth'
					   ELSE ''
					   END) 
	 FROM WAVE_AM_PA0006 A1 LEFT JOIN (SELECT *, ROW_NUMBER() OVER(PARTITION BY PERNR ORDER BY PERNR, SUBTY) AS [ROW] FROM WAVE_AM_PA0006) A2
	    ON A1.PERNR=A2.PERNR AND A1.SUBTY=A2.SUBTY
	--SELECT * FROM WAVE_AM_PA0006 A1 JOIN @WD_HR_TR_WORKERADDRESS_EMPGROUP_0304 A2 ON A1.PERNR=A2.PERNR_NEW ORDER BY A1.PERNR

	 DECLARE @CHINA_ADDRESS_CORRECTIONS TABLE (
       [PersNo]                                 NVARCHAR(255),
       [Emp Name]                               NVARCHAR(255),
       [Address Record Type]                    NVARCHAR(255),
       [Street and House Number]                NVARCHAR(2000),
       [City]                                   NVARCHAR(255),
       [District]                               NVARCHAR(255),
       [Postal Code]                            NVARCHAR(255),
       [Country Key]                            NVARCHAR(255),
       [2nd Address Line]                       NVARCHAR(2000),
       [Region]                                 NVARCHAR(255),
       [Region_RefId]                           NVARCHAR(255)
	 );
	INSERT INTO @CHINA_ADDRESS_CORRECTIONS
	SELECT A2.* FROM 
	   (SELECT * FROM WAVE_CHINA_ADDRESS_CORRECTIONS WHERE [Address Record Type]='Permanent residence') A1
	     JOIN
	   (SELECT * FROM WAVE_CHINA_ADDRESS_CORRECTIONS WHERE [Address Record Type]='Mailing address') A2
	    ON A1.PERSNO=A2.PERSNO
	 WHERE ((ISNULL(A1.[Street and House Number], '')='' AND ISNULL(A1.[2nd Address Line], '')='') AND 
	        (ISNULL(A2.[Street and House Number], '')<>'' OR ISNULL(A2.[2nd Address Line], '')<>''))

	 UPDATE A1 SET
       [Street and House Number]=A2.[Street and House Number]
      ,[City]=A2.[City]
      ,[District]=A2.[District]
      ,[Postal Code]=A2.[Postal Code]
      ,[2nd Address Line]=A2.[2nd Address Line]
      ,[Region]=A2.[Region]
      ,[Region_RefId]=A2.[Region_RefId]
	 FROM WAVE_CHINA_ADDRESS_CORRECTIONS A1 JOIN @CHINA_ADDRESS_CORRECTIONS A2 ON A1.PERSNO=A2.PERSNO
	 WHERE A1.[Address Record Type]='Permanent residence'
END
GO

IF OBJECT_ID('dbo.RemoveFLCommaCharacter') IS NOT NULL
  DROP FUNCTION RemoveFLCommaCharacter
GO
CREATE FUNCTION RemoveFLCommaCharacter(
   @Value            NVARCHAR(2000),
   @CamelCaseFlag    VARCHAR(20)
)  
RETURNS nvarchar(2000)  
BEGIN  
    DECLARE @result AS NVARCHAR(2000)='';

	SET @Value=RTRIM(LTRIM(ISNULL(@Value, '')));
	IF (@Value<>'')
	BEGIN
		SET @Value=IIF(SUBSTRING(@Value, 1, 1)=',', SUBSTRING(@Value, 2, LEN(@Value)), @Value);
		SET @Value=IIF(SUBSTRING(@Value, LEN(@Value), 1)=',', SUBSTRING(@Value, 1, LEN(@Value)-1), @Value);

		IF (@CamelCaseFlag='Y')
		BEGIN
			DECLARE @i INT;
			DECLARE @w INT;
			DECLARE @j NCHAR(1);

			SELECT @i=1, @w=0, @result = '';
			WHILE (@i <= LEN(@Value))
			BEGIN
			   SELECT @j=SUBSTRING(@Value,@i,1),@i=@i+1;
			   IF @j COLLATE Latin1_General_BIN like '[a-z]' SET @w=1;
			END

			IF (@w=0)
			BEGIN
				SELECT @i=1, @w=1, @result = '';
				WHILE (@i <= LEN(@Value))
				BEGIN
				   SELECT @j= SUBSTRING(@Value,@i,1),
				   @result = @result + CASE WHEN @w=1 THEN UPPER(@j) ELSE LOWER(@j) END,
				   @i = @i +1;
				   IF @j like '[ ]' SET @w=0;
				   SET @w = @w +1;
				END
			END
			ELSE SET @result=@Value;
		END
		ELSE SET @result=@Value;
	END

	RETURN @result;
END
GO
--PRINT dbo.RemoveFLCommaCharacter('TORRENT VALLBONA', 'Y');

--DECLARE @Value AS NVARCHAR(2000)='tORRENT VALLBONA';
--DECLARE @j AS NCHAR(1);
--SELECT @j=SUBSTRING(@Value,1,1);
--PRINT @j
--IF @j COLLATE Latin1_General_BIN like '[a-z]' PRINT 'Small letter'; ELSE PRINT 'CAPS letter';


IF OBJECT_ID('dbo.GetAddressLineInfo') IS NOT NULL
  DROP FUNCTION GetAddressLineInfo
GO
CREATE FUNCTION GetAddressLineInfo(
   @Houseno      NVARCHAR(250),
   @Apartment    NVARCHAR(250),
   @Floor        NVARCHAR(250),
   @AddressLine  NVARCHAR(250),
   @Building     NVARCHAR(250),
   @PostalCode   NVARCHAR(250)
)  
RETURNS varchar(500)  
BEGIN  
    DECLARE @result AS VARCHAR(500)='';

	SET @result=@result+IIF(@HouseNo<>'', ','+@HouseNo, '');
	SET @result=@result+IIF(@Apartment<>'', ','+@Apartment, '');
	SET @result=@result+IIF(@Floor<>'', ','+@Floor, '');
	SET @result=@result+IIF(@AddressLine<>'', ','+@AddressLine, '');
	SET @result=@result+IIF(@Building<>'', ','+@Building, '');
	SET @result=@result+IIF(@PostalCode<>'', ','+@PostalCode, '');

	SET @result=IIF(@result='', '', SUBSTRING(@result, 2, LEN(@result)));

	RETURN @result;
END
GO

--EXEC PROC_AUTOMATE_WORKER_ADDRESS_SET_SUB_TYPE_1AND5 '2020-10-11'

-- Verify that the stored procedure does not already exist.  
IF OBJECT_ID ( 'PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS_NEW', 'P' ) IS NOT NULL   
    DROP PROCEDURE PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS_NEW;  
GO
CREATE PROCEDURE [dbo].[PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS_NEW]
    @which_wavestage    AS VARCHAR(50),
	@which_report       AS VARCHAR(500),
	@which_date         AS VARCHAR(50)
AS
BEGIN
    EXEC PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS @which_wavestage, @which_report, @which_date;
END
GO

-- Verify that the stored procedure does not already exist.  
IF OBJECT_ID ( 'PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS', 'P' ) IS NOT NULL   
    DROP PROCEDURE PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS;  
GO
CREATE PROCEDURE [dbo].[PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS]
    @which_wavestage      AS NVARCHAR(50),
	@which_report         AS NVARCHAR(500),
	@which_date           AS NVARCHAR(50)
AS
BEGIN

--04010629
--EXEC PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS_NEW 'W4_P2', 'Worker Address', '2020-10-02'
--EXEC PROC_WAVE_NM_AUTOMATE_WORKER_ADDRESS_NEW 'W4_P2', 'Emergency Contact', '2020-10-02'
--SELECT * FROM WD_HR_TR_WorkerAddress ORDER BY [EmployeeID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE [PRIMARYHOMEADDRESSDATA_STATE(REGION)] <> '' ORDER BY [EmployeeID]
--SELECT * FROM ALCON_MIGRATION_ERROR_LIST WHERE Wave='W4_P2' AND [Report Name]='Worker Address' ORDER BY [Employee ID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE [EmployeeID] ='04010629' ORDER BY [EmployeeID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE [PrimaryHomeAddressData_State(Region)] <> '' OR [HomeAddress2Data_State(Region)]<>'' ORDER BY [EmployeeID]

	update [HRcore_Region_Text]
	set region = concat('0',region)
	where region like '[0-9]'
	and len(region) = 1;

	DECLARE @SQL AS VARCHAR(4000)='drop table if exists WAVE_AM_address_phone_source;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

	SET @SQL='drop table if exists WAVE_CHINA_ADDRESS_CORRECTIONS;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='SELECT * INTO WAVE_CHINA_ADDRESS_CORRECTIONS FROM W3_P2_CHINA_ADDRESS_CORRECTIONS';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;

	SET @SQL='drop table if exists WAVE_SINGAPORE_PC_CORRECTIONS;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='SELECT * INTO WAVE_SINGAPORE_PC_CORRECTIONS FROM W3_P2_SINGAPORE_PC_CORRECTIONS';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='alter table WAVE_SINGAPORE_PC_CORRECTIONS add ORG_COMPANY nvarchar(255);'
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;

	SET @SQL='drop table if exists WAVE_AM_POSITION_MANAGEMENT;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='SELECT * INTO WAVE_AM_POSITION_MANAGEMENT FROM '+@which_wavestage+'_POSITION_MANAGEMENT WHERE [Org - Company Code] <> ''RU08''';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	--SELECT [Emp - Personnel Number], PERSNO_NEW, [Emp - Group] FROM WAVE_AM_POSITION_MANAGEMENT WHERE [emp - group] IN ('3', '4') ORDER BY PERSNO_NEW, [Emp - Group]

	SET @SQL='drop table if exists WAVE_AM_SUP_ORG_SOURCE;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='SELECT * INTO WAVE_AM_SUP_ORG_SOURCE FROM '+SUBSTRING(@which_wavestage, 1, 2)+'_AM_SUP_ORG_SOURCE';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;

	/* Required Info type table */
	SET @SQL='drop table if exists WAVE_AM_PA0006;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='SELECT * INTO WAVE_AM_PA0006 FROM '+@which_wavestage+'_PA0006 WHERE endda >=CAST('''+@which_date+''' as date)	and begda <= CAST('''+@which_date+''' as date);';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='alter table WAVE_AM_PA0006 add ORG_COMPANY nvarchar(255);
	          alter table WAVE_AM_PA0006 add CC nvarchar(255);
			  alter table WAVE_AM_PA0006 add Emp_Group nvarchar(255);
			  alter table WAVE_AM_PA0006 add FIELD_TYPE nvarchar(255);
			  alter table WAVE_AM_PA0006 add ROW_NUM INT;'
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;

	-- If both STRAS and LOCAT is null then Move primary to secondary
	IF (@which_report='Worker Address') DELETE FROM WAVE_AM_PA0006 WHERE SUBTY NOT IN ('1', '5')
	IF (@which_report='Emergency Contact') DELETE FROM WAVE_AM_PA0006 WHERE SUBTY NOT IN ('4')
	DELETE FROM WAVE_AM_PA0006 WHERE NOT(begDa<=CAST(@which_date as date) and endda>=CAST(@which_date as date));
	EXEC PROC_AUTOMATE_WORKER_ADDRESS_SET_SUB_TYPE_1AND5 @which_date

	SET @SQL='drop table if exists WAVE_AM_address_source_data;
	          drop table if exists WAVE_AM_address_source;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

	select persno,
	cast(null as nvarchar(255)) as primary_effective_date,
	cast(null as nvarchar(255)) as primary_country,
	cast(null as nvarchar(255)) as primary_addressLine1,
	cast(null as nvarchar(255)) as primary_addressLine2,
	cast(null as nvarchar(255)) as Primary_addressline3,
	cast(null as nvarchar(255)) as Primary_addressline4,
	cast(null as nvarchar(255)) as Primary_addressline5,
	cast(null as nvarchar(255)) as Primary_addressline6,
	cast(null as nvarchar(255)) as Primary_addressline7,
	cast(null as nvarchar(255)) as Primary_addressline8,
	cast(null as nvarchar(255)) as Primary_addressline9,
	cast(null as nvarchar(255)) as primary_CareofName,
	cast(null as nvarchar(255)) as primary_municipality,
	cast(null as nvarchar(255)) as primary_city,
	cast(null as nvarchar(255)) as primary_city_subdivision,
	cast(null as nvarchar(255)) as primary_city_subdivision_1,
	cast(null as nvarchar(255)) as primary_subregion,
	cast(null as nvarchar(255)) as primary_region,
	cast(null as nvarchar(255)) as primary_region_subdivision_1,
	cast(null as nvarchar(255)) as primary_region_subdivision_2,
	cast(null as nvarchar(255)) as primary_region_referenceid,
	cast(null as nvarchar(255)) as primary_Country_code ,
	cast(null as nvarchar(255)) as primary_postalcode,
	cast(null as nvarchar(255)) as primary_prefecture,
	cast(null as nvarchar(255)) as primary_OR1KK,
	cast(null as nvarchar(255)) as primary_OR2KK,
	cast(null as nvarchar(255)) as primary_CONKK,
	cast(null as nvarchar(255)) as secondary_effective_date,
	cast(null as nvarchar(255)) as secondary_country,
	cast(null as nvarchar(255)) as secondary_addressLine1,
	cast(null as nvarchar(255)) as Secondary_addressLine2,
	cast(null as nvarchar(255)) as secondary_addressline3,
	cast(null as nvarchar(255)) as secondary_addressline4,
	cast(null as nvarchar(255)) as secondary_addressline5,
	cast(null as nvarchar(255)) as secondary_addressline6,
	cast(null as nvarchar(255)) as secondary_addressline7,
	cast(null as nvarchar(255)) as secondary_addressline8,
	cast(null as nvarchar(255)) as secondary_addressline9,
	cast(null as nvarchar(255)) as secondary_CareofName,
	cast(null as nvarchar(255)) as secondary_municipality,
	cast(null as nvarchar(255)) as secondary_city,
	cast(null as nvarchar(255)) as secondary_city_subdivision,
	cast(null as nvarchar(255)) as secondary_city_subdivision_1,
	cast(null as nvarchar(255)) as secondary_subregion,
	cast(null as nvarchar(255)) as secondary_region,
	cast(null as nvarchar(255)) as secondary_region_subdivision_1,
	cast(null as nvarchar(255)) as secondary_region_subdivision_2,
	cast(null as nvarchar(255)) as secondary_region_referenceid,
	cast(null as nvarchar(255)) as secondary_Country_code ,
	cast(null as nvarchar(255)) as secondary_postalcode,
	cast(null as nvarchar(255)) as secondary_prefecture,
	cast(null as nvarchar(255)) as secondary_OR1KK,
	cast(null as nvarchar(255)) as secondary_OR2KK,
	cast(null as nvarchar(255)) as secondary_CONKK,
	cast(null as nvarchar(255)) as third_effective_date,
	cast(null as nvarchar(255)) as third_country,
	cast(null as nvarchar(255)) as third_addressLine1,
	cast(null as nvarchar(255)) as third_addressLine2,
	cast(null as nvarchar(255)) as third_addressline3,
	cast(null as nvarchar(255)) as third_addressline4,
	cast(null as nvarchar(255)) as third_addressline5,
	cast(null as nvarchar(255)) as third_addressline6,
	cast(null as nvarchar(255)) as third_addressline7,
	cast(null as nvarchar(255)) as third_addressline8,
	cast(null as nvarchar(255)) as third_addressline9,
	cast(null as nvarchar(255)) as third_CareofName,
	cast(null as nvarchar(255)) as third_municipality,
	cast(null as nvarchar(255)) as third_city,
	cast(null as nvarchar(255)) as third_city_subdivision,
	cast(null as nvarchar(255)) as third_city_subdivision_1,
	cast(null as nvarchar(255)) as third_subregion,
	cast(null as nvarchar(255)) as third_region,
	cast(null as nvarchar(255)) as third_region_subdivision_1,
	cast(null as nvarchar(255)) as third_region_subdivision_2,
	cast(null as nvarchar(255)) as third_region_referenceid,
	cast(null as nvarchar(255)) as third_Country_code ,
	cast(null as nvarchar(255)) as third_postalcode,
	cast(null as nvarchar(255)) as third_prefecture,
	cast(null as nvarchar(255)) as third_OR1KK,
	cast(null as nvarchar(255)) as third_OR2KK,
	cast(null as nvarchar(255)) as third_CONKK,
	cast(null as nvarchar(255)) as fourth_effective_date,
	cast(null as nvarchar(255)) as fourth_country,
	cast(null as nvarchar(255)) as fourth_addressLine1,
	cast(null as nvarchar(255)) as fourth_addressLine2,
	cast(null as nvarchar(255)) as fourth_addressline3,
	cast(null as nvarchar(255)) as fourth_addressline4,
	cast(null as nvarchar(255)) as fourth_addressline5,
	cast(null as nvarchar(255)) as fourth_addressline6,
	cast(null as nvarchar(255)) as fourth_addressline7,
	cast(null as nvarchar(255)) as fourth_addressline8,
	cast(null as nvarchar(255)) as fourth_addressline9,
	cast(null as nvarchar(255)) as fourth_CareofName,
	cast(null as nvarchar(255)) as fourth_municipality,
	cast(null as nvarchar(255)) as fourth_city,
	cast(null as nvarchar(255)) as fourth_city_subdivision,
	cast(null as nvarchar(255)) as fourth_city_subdivision_1,
	cast(null as nvarchar(255)) as fourth_subregion,
	cast(null as nvarchar(255)) as fourth_region,
	cast(null as nvarchar(255)) as fourth_region_subdivision_1,
	cast(null as nvarchar(255)) as fourth_region_subdivision_2,
	cast(null as nvarchar(255)) as fourth_region_referenceid,
	cast(null as nvarchar(255)) as fourth_Country_code ,
	cast(null as nvarchar(255)) as fourth_postalcode,
	cast(null as nvarchar(255)) as fourth_prefecture,
	cast(null as nvarchar(255)) as fourth_OR1KK,
	cast(null as nvarchar(255)) as fourth_OR2KK,
	cast(null as nvarchar(255)) as fourth_CONKK
	into WAVE_AM_address_source_data
    FROM [dbo].[WAVE_AM_PA0006] A1
	JOIN WAVE_AM_SUP_ORG_SOURCE A2 ON A1.pernr = A2.persno
	WHERE begDa<=CAST(@which_date as date) AND endda>=CAST(@which_date as date)

	DECLARE @WAVE AS VARCHAR(30)='';
	SET @WAVE=(CASE 
	              WHEN SUBSTRING(@which_wavestage, 1, 2)='W2' THEN 'Wave 2' 
				  WHEN SUBSTRING(@which_wavestage, 1, 2)='W3' THEN 'Wave 3' 
				  WHEN SUBSTRING(@which_wavestage, 1, 2)='W4' THEN 'Wave 4' 
				  ELSE ''
				END);

    EXEC [PROC_AUTOMATE_WORKER_ADDRESS_EXECUTE_EXT_FORMAT] @which_date, '1';
	EXEC [PROC_AUTOMATE_WORKER_ADDRESS_EXECUTE_EXT_FORMAT] @which_date, '2';
	EXEC [PROC_AUTOMATE_WORKER_ADDRESS_EXECUTE_EXT_FORMAT] @which_date, '3';
	EXEC [PROC_AUTOMATE_WORKER_ADDRESS_EXECUTE_EXT_FORMAT] @which_date, '4';

	SELECT * INTO WAVE_AM_address_source FROM (
		SELECT *, ROW_NUMBER() OVER(PARTITION BY PERSNO ORDER BY PERSNO) ROW_NUM FROM WAVE_AM_address_source_data
	) A1 WHERE ROW_NUM=1

	update WAVE_AM_address_source
	set primary_city = null
	where primary_country in 
	(
	 SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Municipality (City)] IN ('Not Accepted')
	)
	and primary_city is not null;

	update WAVE_AM_address_source
	set secondary_city = null
	where secondary_country in 
	(
	 SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Municipality (City)] IN ('Not Accepted')
	)
	and secondary_city is not null;

	update WAVE_AM_address_source
	set third_city = null
	where third_country in 
	(
	 SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Municipality (City)] IN ('Not Accepted')
	)
	and third_city is not null;

	update WAVE_AM_address_source
	set fourth_city = null
	where fourth_country in 
	(
	 SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Municipality (City)] IN ('Not Accepted')
	)
	and fourth_city is not null;

	update WAVE_AM_address_source
	set primary_Subregion = null
	where primary_Country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Subregion (Country)] IN ('Not Accepted')
	)
	and primary_Subregion is not null;

	update WAVE_AM_address_source
	set secondary_Subregion = null
	where secondary_Country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Subregion (Country)] IN ('Not Accepted')
	)
	and secondary_Subregion is not null;

	update WAVE_AM_address_source
	set third_Subregion = null
	where third_Country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Subregion (Country)] IN ('Not Accepted')
	)
	and third_Subregion is not null;

	update WAVE_AM_address_source
	set fourth_Subregion = null
	where fourth_Country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [Subregion (Country)] IN ('Not Accepted')
	)
	and fourth_Subregion is not null;

	update WAVE_AM_address_source
	set primary_city_subdivision = null
	where primary_country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [City Subdivision] IN ('Not Accepted')
	)
	and primary_city_subdivision is not null;

	update WAVE_AM_address_source
	set secondary_city_subdivision = null
	where secondary_country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [City Subdivision] IN ('Not Accepted')
	)
	and secondary_city_subdivision is not null;

	update WAVE_AM_address_source
	set third_city_subdivision = null
	where third_country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [City Subdivision] IN ('Not Accepted')
	)
	and third_city_subdivision is not null;

	update WAVE_AM_address_source
	set fourth_city_subdivision = null
	where fourth_country in 
	(
		SELECT  [Country2 Code] FROM W4_ADDRESS_VALIDATION WHERE [City Subdivision] IN ('Not Accepted')
	)
	and fourth_city_subdivision is not null;

	update WAVE_AM_address_source
	set primary_postalcode = null
	where primary_country = 'PA'
	and primary_postalcode  is not null;

	update WAVE_AM_address_source
	set secondary_postalcode = null
	where secondary_country ='PA'
	and secondary_postalcode  is not null;

	update WAVE_AM_address_source
	set third_postalcode = null
	where third_country ='PA'
	and third_postalcode  is not null;

	update WAVE_AM_address_source
	set fourth_postalcode = null
	where fourth_country ='PA'
	and fourth_postalcode  is not null;

    update a
	set a.primary_Country_code = b.iso3
	from WAVE_AM_address_source a
	join w2_p1_country b
	on a.primary_Country=b.iso2;

	update a
	set a.secondary_Country_Code = b.iso3
	from WAVE_AM_address_source a
	join w2_p1_country b
	on a.secondary_Country=b.iso2;

	update a
	set a.third_Country_Code = b.iso3
	from WAVE_AM_address_source a
	join w2_p1_country b
	on a.third_Country=b.iso2;

	update a
	set a.fourth_Country_Code = b.iso3
	from WAVE_AM_address_source a
	join w2_p1_country b
	on a.fourth_Country=b.iso2;


	--SELECt * FROm WAVE_AM_address_source WHERe PERSNO='42004067'
	SET @SQL='drop table if exists WAVE_AM_address;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL
	select
	    [persno] ,
		b.[PERSNO_NEW],
	    [Emp - Personnel Number],

		[primary_effective_date],
		[primary_country_code],
		[primary_addressLine1] [primary_addressLine1],
		[primary_addressLine2] [primary_addressLine2],
		[primary_addressLine3] [primary_addressLine3],
		[primary_addressLine4] [primary_addressLine4],
		[primary_addressLine5] [primary_addressLine5],
		[primary_addressLine6] [primary_addressLine6],
		[primary_addressLine7] [primary_addressLine7],
		[primary_addressLine8] [primary_addressLine8],
		[primary_addressLine9] [primary_addressLine9],
		[primary_city] ,
		[primary_city_subdivision] [primary_city_subdivision],
		[primary_city_subdivision_1] [primary_city_subdivision_1],
		[primary_subregion] ,
		[primary_region] ,
		primary_region_subdivision_1,
		primary_region_subdivision_2,
		primary_Region_referenceID,
		[primary_postalcode], 
		[Primary_OR1KK],
		[Primary_OR2KK],
		[Primary_CONKK],
		[primary_CareOfName],
		case when [primary_country_code] is not null then 'No'  end as primary_public,
		case when [primary_country_code] is not null then 'permanent'  end as primary_usage,

		[secondary_effective_date],
		[secondary_country_code],
		[secondary_addressLine1] [secondary_addressLine1], 
		[secondary_addressLine2] [secondary_addressLine2],
		[secondary_addressLine3] [secondary_addressLine3], 
		[secondary_addressLine4] [secondary_addressLine4],
		[secondary_addressLine5] [secondary_addressLine5],
		[secondary_addressLine6] [secondary_addressLine6],
		[secondary_addressLine7] [secondary_addressLine7],
		[secondary_addressLine8] [secondary_addressLine8],
		[secondary_addressLine9] [secondary_addressLine9],
		[secondary_city] ,
		[secondary_city_subdivision] [secondary_city_subdivision],
		[secondary_city_subdivision_1] [secondary_city_subdivision_1],
		[secondary_subregion] ,
		[secondary_region] ,
		secondary_region_subdivision_1,
		secondary_region_subdivision_2,
		secondary_Region_referenceID,
		[secondary_postalcode] ,
		[secondary_OR1KK],
		[secondary_OR2KK],
		[secondary_CONKK],
		[Secondary_CareOfName],
		case when [secondary_country_code] is not null then 'No'  end as secondary_public,
		case when [secondary_country_code] is not null then 'mailing'  end as secondary_usage,

		[third_effective_date],
		[third_country_code],
		[third_addressLine1] [third_addressLine1], 
		[third_addressLine2] [third_addressLine2],
		[third_addressLine3] [third_addressLine3], 
		[third_addressLine4] [third_addressLine4],
		[third_addressLine5] [third_addressLine5],
		[third_addressLine6] [third_addressLine6],
		[third_addressLine7] [third_addressLine7],
		[third_addressLine8] [third_addressLine8],
		[third_addressLine9] [third_addressLine9],
		[third_city],
		[third_city_subdivision] [third_city_subdivision],
		[third_city_subdivision_1] [third_city_subdivision_1],
		[third_subregion],
		[third_region],
		[third_region_subdivision_1],
		[third_region_subdivision_2],
		[third_Region_referenceID],
		[third_postalcode],
		[third_OR1KK],
		[third_OR2KK],
		[third_CONKK],
		[third_CareOfName],
		case when [third_country_code] is not null then 'No'  end as third_public,
		case when [third_country_code] is not null then 'mailing'  end as third_usage,

		[fourth_effective_date],
		[fourth_country_code],
		[fourth_addressLine1] [fourth_addressLine1], 
		[fourth_addressLine2] [fourth_addressLine2],
		[fourth_addressLine3] [fourth_addressLine3], 
		[fourth_addressLine4] [fourth_addressLine4],
		[fourth_addressLine5] [fourth_addressLine5],
		[fourth_addressLine6] [fourth_addressLine6],
		[fourth_addressLine7] [fourth_addressLine7],
		[fourth_addressLine8] [fourth_addressLine8],
		[fourth_addressLine9] [fourth_addressLine9],
		[fourth_city],
		[fourth_city_subdivision] [fourth_city_subdivision],
		[fourth_city_subdivision_1] [fourth_city_subdivision_1],
		[fourth_subregion],
		[fourth_region],
		[fourth_region_subdivision_1],
		[fourth_region_subdivision_2],
		[fourth_Region_referenceID],
		[fourth_postalcode],
		[fourth_OR1KK],
		[fourth_OR2KK],
		[fourth_CONKK],
		[fourth_CareOfName],
		case when [fourth_country_code] is not null then 'No'  end as fourth_public,
		case when [fourth_country_code] is not null then 'mailing'  end as fourth_usage,

		[Emp - Group]
		into WAVE_AM_address
	FROM WAVE_AM_address_source a
	join WAVE_AM_position_management b
	on a.persno =b.[emp - personnel number];

	/* Region Mapping */
	UPDATE WAVE_AM_address SET primary_Region_referenceID=primary_region;
	UPDATE WAVE_AM_address SET secondary_Region_referenceID=secondary_region;
	UPDATE WAVE_AM_address SET third_Region_referenceID=third_region;
	UPDATE WAVE_AM_address SET fourth_Region_referenceID=fourth_region;

	UPDATE A1
	     SET PRIMARY_REGION_REFERENCEID=ISNULL(PRIMARY_REGION_REF_ID, ''), 
		     SECONDARY_REGION_REFERENCEID=ISNULL(SECONDARY_REGION_REF_ID,'')
	FROM WAVE_AM_address A1 JOIN REGION_MAPPING_LKUP A2 ON A1.PERSNO=A2.PERNR
	--SELECT * FROM region_mapping_lkup_bkp_07jan WHERE PERNR='84000839'

	--EXEC PROC_AUTOMATE_WORKER_ADDRESS_REGION_MAPPING
	/* Manual updates */
	--EXEC PROC_CREATE_MANUAL_UPDATE_FOR_ADDRESS
	--INSERT INTO REGION_MAPPING_LKUP SELECT PERSNO, primary_country_code, primary_Region_referenceID, secondary_country_code, secondary_Region_referenceID FROM WAVE_AM_address
	--SELECT * FROM REGION_MAPPING_LKUP

	
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH 'alter table WAVE_AM_address
                                             add  Local1_Flag nvarchar(255),  
											      Local2_Flag nvarchar(255),
												  Local3_Flag nvarchar(255),
												  Local4_Flag nvarchar(255);';
    --SELECt * FROM WAVE_AM_address WHERe PERSNO='45006105'
	--174 55
	--,ΑΤΤΙΚΗ
	--Polinikous,25,
	--GRC-A1
	--Polinikous,25,,ΑΤΤΙΚΗAlimos
	--Polinikous,25,,ΑΤΤΙΚΗAlimos

	--DECLARE @Value AS NVARCHAR(MAX)='';
	--SELECt @Value=concat(ISNULL(primary_addressline1, ''),ISNULL(primary_Addressline2, ''),ISNULL(primary_Addressline3, ''),
	--								   ISNULL(primary_Addressline4, ''),ISNULL(primary_Addressline5, ''),ISNULL(primary_Addressline6, ''),
	--								   ISNULL(primary_Addressline7, ''),ISNULL(primary_Addressline8, ''),ISNULL(primary_Addressline9, ''),
	--								   ISNULL(primary_city, ''),ISNULL(primary_City_Subdivision, ''),ISNULL(primary_subregion, ''),
	--								   ISNULL(primary_OR1KK, ''),ISNULL(primary_OR2KK, '')) FROM WAVE_AM_address WHERe PERSNO='45006105'
	--DECLARE @KeepValues AS VARCHAR(MAX) = @Value;
	--IF (@Value <> @KeepValues) 
	--BEGIN 
	--   PRINT @Value;
	--   PRINT @KeepValues
	--END

	--PRINT 'English Character';


    --SELECt concat(ISNULL(primary_addressline1, ''),ISNULL(primary_Addressline2, ''),ISNULL(primary_Addressline3, ''),
				--					   ISNULL(primary_Addressline4, ''),ISNULL(primary_Addressline5, ''),ISNULL(primary_Addressline6, ''),
				--					   ISNULL(primary_Addressline7, ''),ISNULL(primary_Addressline8, ''),ISNULL(primary_Addressline9, ''),
				--					   ISNULL(primary_city, ''),ISNULL(primary_City_Subdivision, ''),ISNULL(primary_subregion, ''),
				--					   ISNULL(primary_OR1KK, ''),ISNULL(primary_OR2KK, '')), 
		  --dbo.GetNonEnglishName(concat(ISNULL(primary_addressline1, ''),ISNULL(primary_Addressline2, ''),ISNULL(primary_Addressline3, ''),
				--					   ISNULL(primary_Addressline4, ''),ISNULL(primary_Addressline5, ''),ISNULL(primary_Addressline6, ''),
				--					   ISNULL(primary_Addressline7, ''),ISNULL(primary_Addressline8, ''),ISNULL(primary_Addressline9, ''),
				--					   ISNULL(primary_city, ''),ISNULL(primary_City_Subdivision, ''),ISNULL(primary_subregion, ''),
				--					   ISNULL(primary_OR1KK, ''),ISNULL(primary_OR2KK, ''))) FROM WAVE_AM_address WHERe PERSNO='45006105'

	update a 
	set Local1_Flag = 'Y'
	from WAVE_AM_address a
	where dbo.getNonEnglishName(concat(ISNULL(primary_addressline1, ''),ISNULL(primary_Addressline2, ''),ISNULL(primary_Addressline3, ''),
									   ISNULL(primary_Addressline4, ''),ISNULL(primary_Addressline5, ''),ISNULL(primary_Addressline6, ''),
									   ISNULL(primary_Addressline7, ''),ISNULL(primary_Addressline8, ''),ISNULL(primary_Addressline9, ''),
									   ISNULL(primary_city, ''),ISNULL(primary_City_Subdivision, ''),ISNULL(primary_subregion, ''),
									   ISNULL(primary_OR1KK, ''),ISNULL(primary_OR2KK, ''))) <> ''
	and primary_country_Code  in ('JPN','KOR','CHN','THA','TWN','RUS','UKR','GRC','EGY');

	update a 
	set Local2_Flag = 'Y'
	From WAVE_AM_address a
	where dbo.getNonEnglishName(concat(secondary_addressline1,secondary_Addressline2,secondary_Addressline3,
									   secondary_addressline4,secondary_Addressline5,secondary_Addressline6,
									   secondary_addressline7,secondary_Addressline8,secondary_Addressline9, 
									   secondary_city,secondary_City_Subdivision,secondary_subregion,secondary_OR1KK,secondary_OR2KK)) <> ''
	and secondary_country_Code  in ('JPN','KOR','CHN','THA','TWN','RUS','UKR','GRC','EGY');

	update a 
	set Local3_Flag = 'Y'
	From WAVE_AM_address a
	where dbo.getNonEnglishName(concat(third_addressline1,third_Addressline2,third_Addressline3,
									   third_addressline4,third_Addressline5,third_Addressline6,
									   third_addressline7,third_Addressline8,third_Addressline9, 
									   third_city,third_City_Subdivision,third_subregion,third_OR1KK,third_OR2KK)) <> ''
	and third_country_Code  in ('JPN','KOR','CHN','THA','TWN','RUS','UKR','GRC','EGY');

	update a 
	set Local4_Flag = 'Y'
	From WAVE_AM_address a
	where dbo.getNonEnglishName(concat(fourth_addressline1,fourth_Addressline2,fourth_Addressline3,
									   fourth_addressline4,fourth_Addressline5,fourth_Addressline6,
									   fourth_addressline7,fourth_Addressline8,fourth_Addressline9, 
									   fourth_city,fourth_City_Subdivision,fourth_subregion,fourth_OR1KK,fourth_OR2KK)) <> ''
	and fourth_country_Code  in ('JPN','KOR','CHN','THA','TWN','RUS','UKR','GRC','EGY');


	delete from WAVE_AM_address where persno = '34006132';
	--SELECT * FROM WAVE_AM_ADDRESS WHERE PERSNO LIKE '21%'

	SET @SQL='drop table if exists WAVE_POSITION_MANAGEMENT;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='SELECT * INTO WAVE_POSITION_MANAGEMENT FROM WAVE_AM_POSITION_MANAGEMENT;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;

	/* Populating data in final table */
    SET @SQL='drop table if exists WD_HR_TR_WorkerAddress;
	          drop table if exists WD_HR_TR_WORKERADDRESS_EMPGROUP_04;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

    SELECT ISNULL(PERSNO, '') [LegacySystemID] 
            ,ISNULL(PERSNO, '') [EmployeeID]
            ,ISNULL([persno_new], '')  [ApplicantID]

			---------------------------------------------------
            ,'' [PrimaryHomeAddressData_Row]
            ,IIF(Local1_Flag is null,IIF(ISNULL(primary_effective_date, '')='', '', CONVERT(varchar(10), CAST(primary_effective_date as date), 101)),'') [PrimaryHomeAddressData_EffectiveDate]
            ,IIF(Local1_Flag is null,ISNULL(primary_country_code, ''),'')  [PrimaryHomeAddressData_CountryISOCode]
            ,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline1, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine1]
            ,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline2, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine2]
            ,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline3, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine3]
            ,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline4, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine4]
			,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline5, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine5]
			,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline6, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine6]
			,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline7, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine7]
			,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline8, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine8]
			,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline9, 'Y'), ''),'')  [PrimaryHomeAddressData_AddressLine9]
            ,IIF(Local1_Flag is null,ISNULL(primary_city, ''),'')  [PrimaryHomeAddressData_City(Municipality)]
            ,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_city_subdivision, 'N'), ''),'')  [PrimaryHomeAddressData_SubMunicipalityType]
			,IIF(Local1_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(primary_city_subdivision_1, 'N'), ''),'')  [PrimaryHomeAddressData_CitySubdivision_1]
            ,''[PrimaryHomeAddressData_SubMunicipality]
            ,IIF(Local1_Flag is null,ISNULL(primary_Region_referenceID, ''),'')  [PrimaryHomeAddressData_State(Region)]
            ,''[PrimaryHomeAddressData_SubregionDescriptor]
            ,''[PrimaryHomeAddressData_SubregionType]
            ,IIF(Local1_Flag is null,ISNULL(primary_subregion, ''),'')  [PrimaryHomeAddressData_Subregion(County)]
			,IIF(Local1_Flag is null,ISNULL(primary_region_subdivision_1, ''),'')  [PrimaryHomeAddressData_RegionSubdivision_1]
			,IIF(Local1_Flag is null,ISNULL(primary_region_subdivision_2, ''),'')  [PrimaryHomeAddressData_RegionSubdivision_2]
            ,IIF(Local1_Flag is null,IIF(primary_country_code='CHN' AND ISNULL(primary_postalcode, '')='', '000000', ISNULL(primary_postalcode, '')),'')  [PrimaryHomeAddressData_PostalCode]
            ,IIF(Local1_Flag is null,ISNULL(primary_public, ''),'')  [PrimaryHomeAddressData_Public]
            ,IIF(Local1_Flag is null,ISNULL(primary_usage, ''),'') [PrimaryHomeAddressData_Usage]

			-------------------------------------------
            ,'' [HomeAddress2Data_Row]
            ,IIF(Local2_Flag is null,IIF(ISNULL(secondary_effective_date, '')='', '', CONVERT(varchar(10), CAST(secondary_effective_date as date), 101)),'')  [HomeAddress2Data_EffectiveDate]
            ,IIF(Local2_Flag is null,ISNULL(secondary_country_code, ''),'')  [HomeAddress2Data_CountryISOCode]
            ,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline1, 'Y'), ''),'')  [HomeAddress2Data_AddressLine1]
            ,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline2, 'Y'), ''),'')  [HomeAddress2Data_AddressLine2]
            ,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline3, 'Y'), ''),'') [HomeAddress2Data_AddressLine3]
            ,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline4, 'Y'), ''),'')  [HomeAddress2Data_AddressLine4]
			,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline5, 'Y'), ''),'')  [HomeAddress2Data_AddressLine5]
			,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline6, 'Y'), ''),'')  [HomeAddress2Data_AddressLine6]
			,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline7, 'Y'), ''),'')  [HomeAddress2Data_AddressLine7]
			,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline8, 'Y'), ''),'')  [HomeAddress2Data_AddressLine8]
			,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_addressline9, 'Y'), ''),'')  [HomeAddress2Data_AddressLine9]
            ,IIF(Local2_Flag is null,ISNULL(secondary_city, ''),'')  [HomeAddress2Data_City(Municipality)]
            ,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_city_subdivision, 'N'), ''),'')  [HomeAddress2Data_SubMunicipalityType]
			,IIF(Local2_Flag is null, ISNULL(dbo.RemoveFLCommaCharacter(secondary_city_subdivision_1, 'N'), ''),'')  [HomeAddress2Data_CitySubdivision_1]
            ,''[HomeAddress2Data_SubMunicipality]
            ,IIF(Local2_Flag is null,ISNULL(secondary_Region_ReferenceID, '') ,'') [HomeAddress2Data_State(Region)]
            ,''[HomeAddress2Data_SubregionDescriptor]
            ,''[HomeAddress2Data_SubregionType]
            ,IIF(Local2_Flag is null,ISNULL(secondary_subregion, ''),'')  [HomeAddress2Data_Subregion(County)]
			,IIF(Local2_Flag is null,ISNULL(secondary_region_subdivision_1, ''),'')  [HomeAddress2Data_RegionSubdivision_1]
			,IIF(Local2_Flag is null,ISNULL(secondary_region_subdivision_2, ''),'')  [HomeAddress2Data_RegionSubdivision_2]
            ,IIF(Local2_Flag is null,IIF(secondary_country_code='CHN' AND ISNULL(secondary_postalcode, '')='', '000000', ISNULL(secondary_postalcode, '')) ,'') [HomeAddress2Data_PostalCode]
            ,IIF(Local2_Flag is null,ISNULL(secondary_public, ''),'') [HomeAddress2Data_Public]
            ,IIF(Local2_Flag is null,ISNULL(secondary_usage, '') ,'') [HomeAddress2Data_Usage]

			/*
			-------------------------------------------
            ,'' [HomeAddress3Data_Row]
            ,IIF(local3_Flag is null,IIF(ISNULL(third_effective_date, '')='', '', CONVERT(varchar(10), CAST(third_effective_date as date), 101)),'')  [HomeAddress3Data_EffectiveDate]
            ,IIF(local3_Flag is null,ISNULL(third_country_code, ''),'')  [HomeAddress3Data_CountryISOCode]
            ,IIF(local3_Flag is null,ISNULL(third_addressline1, ''),'')  [HomeAddress3Data_AddressLine1]
            ,IIF(local3_Flag is null,ISNULL(third_addressline2, ''),'')  [HomeAddress3Data_AddressLine2]
            ,IIF(local3_Flag is null,ISNULL(third_addressline3, '') ,'') [HomeAddress3Data_AddressLine3]
            ,IIF(local3_Flag is null,ISNULL(third_addressline4, ''),'')  [HomeAddress3Data_AddressLine4]
			,IIF(local3_Flag is null,ISNULL(third_addressline5, ''),'')  [HomeAddress3Data_AddressLine5]
			,IIF(local3_Flag is null,ISNULL(third_addressline6, ''),'')  [HomeAddress3Data_AddressLine6]
			,IIF(local3_Flag is null,ISNULL(third_addressline7, ''),'')  [HomeAddress3Data_AddressLine7]
			,IIF(local3_Flag is null,ISNULL(third_addressline8, ''),'')  [HomeAddress3Data_AddressLine8]
			,IIF(local3_Flag is null,ISNULL(third_addressline9, ''),'')  [HomeAddress3Data_AddressLine9]
            ,IIF(local3_Flag is null,ISNULL(third_city, ''),'')  [HomeAddress3Data_City(Municipality)]
            ,IIF(local3_Flag is null,ISNULL(third_city_subdivision, ''),'')  [HomeAddress3Data_SubMunicipalityType]
			,IIF(local3_Flag is null,ISNULL(third_city_subdivision_1, ''),'')  [HomeAddress3Data_CitySubdivision_1]
            ,''[HomeAddress3Data_SubMunicipality]
            ,IIF(local3_Flag is null,ISNULL(third_Region_ReferenceID, '') ,'') [HomeAddress3Data_State(Region)]
            ,''[HomeAddress3Data_SubregionDescriptor]
            ,''[HomeAddress3Data_SubregionType]
            ,IIF(local3_Flag is null,ISNULL(third_subregion, ''),'')  [HomeAddress3Data_Subregion(County)]
			,IIF(local3_Flag is null,ISNULL(third_region_subdivision_1, ''),'')  [HomeAddress3Data_RegionSubdivision_1]
			,IIF(local3_Flag is null,ISNULL(third_region_subdivision_2, ''),'')  [HomeAddress3Data_RegionSubdivision_2]
            ,IIF(local3_Flag is null,IIF(third_country_code='CHN' AND ISNULL(third_postalcode, '')='', '000000', ISNULL(third_postalcode, '')) ,'') [HomeAddress3Data_PostalCode]
            ,IIF(local3_Flag is null,ISNULL(third_public, ''),'') [HomeAddress3Data_Public]
            ,IIF(local3_Flag is null,ISNULL(third_usage, '') ,'') [HomeAddress3Data_Usage]

			-------------------------------------------
            ,'' [HomeAddress4Data_Row]
            ,IIF(local4_Flag is null,IIF(ISNULL(fourth_effective_date, '')='', '', CONVERT(varchar(10), CAST(fourth_effective_date as date), 101)),'')  [HomeAddress4Data_EffectiveDate]
            ,IIF(local4_Flag is null,ISNULL(fourth_country_code, ''),'')  [HomeAddress4Data_CountryISOCode]
            ,IIF(local4_Flag is null,ISNULL(fourth_addressline1, ''),'')  [HomeAddress4Data_AddressLine1]
            ,IIF(local4_Flag is null,ISNULL(fourth_addressline2, ''),'')  [HomeAddress4Data_AddressLine2]
            ,IIF(local4_Flag is null,ISNULL(fourth_addressline3, '') ,'') [HomeAddress4Data_AddressLine3]
            ,IIF(local4_Flag is null,ISNULL(fourth_addressline4, ''),'')  [HomeAddress4Data_AddressLine4]
			,IIF(local4_Flag is null,ISNULL(fourth_addressline5, ''),'')  [HomeAddress4Data_AddressLine5]
			,IIF(local4_Flag is null,ISNULL(fourth_addressline6, ''),'')  [HomeAddress4Data_AddressLine6]
			,IIF(local4_Flag is null,ISNULL(fourth_addressline7, ''),'')  [HomeAddress4Data_AddressLine7]
			,IIF(local4_Flag is null,ISNULL(fourth_addressline8, ''),'')  [HomeAddress4Data_AddressLine8]
			,IIF(local4_Flag is null,ISNULL(fourth_addressline9, ''),'')  [HomeAddress4Data_AddressLine9]
            ,IIF(local4_Flag is null,ISNULL(fourth_city, ''),'')  [HomeAddress4Data_City(Municipality)]
            ,IIF(local4_Flag is null,ISNULL(fourth_city_subdivision, ''),'')  [HomeAddress4Data_SubMunicipalityType]
			,IIF(local4_Flag is null,ISNULL(fourth_city_subdivision_1, ''),'')  [HomeAddress4Data_CitySubdivision_1]
            ,''[HomeAddress4Data_SubMunicipality]
            ,IIF(local4_Flag is null,ISNULL(fourth_Region_ReferenceID, '') ,'') [HomeAddress4Data_State(Region)]
            ,''[HomeAddress4Data_SubregionDescriptor]
            ,''[HomeAddress4Data_SubregionType]
            ,IIF(local4_Flag is null,ISNULL(fourth_subregion, ''),'')  [HomeAddress4Data_Subregion(County)]
			,IIF(local4_Flag is null,ISNULL(fourth_region_subdivision_1, ''),'')  [HomeAddress4Data_RegionSubdivision_1]
			,IIF(local4_Flag is null,ISNULL(fourth_region_subdivision_2, ''),'')  [HomeAddress4Data_RegionSubdivision_2]
            ,IIF(local4_Flag is null,IIF(fourth_country_code='CHN' AND ISNULL(fourth_postalcode, '')='', '000000', ISNULL(fourth_postalcode, '')) ,'') [HomeAddress4Data_PostalCode]
            ,IIF(local4_Flag is null,ISNULL(fourth_public, ''),'') [HomeAddress4Data_Public]
            ,IIF(local4_Flag is null,ISNULL(fourth_usage, '') ,'') [HomeAddress4Data_Usage]
			*/
            ---------------------------------------------
            ,'' Home_Address_Local1Data_Row
            ,IIF(Local1_Flag='Y',IIF(ISNULL(primary_effective_date, '')='', '', CONVERT(varchar(10), CAST(primary_effective_date as date), 101)),'') Home_Address_Local1Data_Effective_Date
            ,IIF(Local1_Flag='Y',ISNULL(primary_country_code, ''),'')  Home_Address_Local1Data_ISO_Code
            ,IIF(Local1_Flag='Y',ISNULL(primary_city, ''),'') Home_Address_Local1Data_CITY
            ,IIF(Local1_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline1, 'N'), ''),'') Home_Address_Local1Data_ADDRESS_LINE_1
            ,IIF(Local1_Flag='Y',(CASE
                    WHEN ISNULL(primary_country_code, '') in ('CHN','KOR','THA','TWN','RUS','UKR','GRC','EGY') THEN dbo.GetNonEnglishName(dbo.RemoveFLCommaCharacter(primary_addressLine2, 'N'))
					ELSE ''	  END),'') Home_Address_Local1Data_ADDRESS_LINE_2
            ,IIF(Local1_Flag='Y',IIF(ISNULL(primary_country_code, '') = 'JPN', primary_OR1KK, ''),'') Home_Address_Local1Data_ADDRESS_LINE_4
            ,IIF(Local1_Flag='Y',IIF(ISNULL(primary_country_code, '') = 'JPN', dbo.RemoveFLCommaCharacter(primary_addressLine2, 'N'), ''),'') Home_Address_Local1Data_ADDRESS_LINE_5
            ,IIF(Local1_Flag='Y',IIF(ISNULL(primary_country_code, '') = 'JPN', primary_OR2KK, ''),'') Home_Address_Local1Data_ADDRESS_LINE_6
			,IIF(Local1_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline7, 'N'), ''),'') Home_Address_Local1Data_ADDRESS_LINE_7
			,IIF(Local1_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline8, 'N'), ''),'') Home_Address_Local1Data_ADDRESS_LINE_8
			,IIF(Local1_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(primary_addressline9, 'N'), ''),'') Home_Address_Local1Data_ADDRESS_LINE_9

            ,IIF(Local1_Flag='Y',ISNULL(primary_city_subdivision, ''),'') Home_Address_Local1Data_CITY_SUBDIVISION_1
			,IIF(Local1_Flag='Y',ISNULL(primary_city_subdivision_1, ''),'') Home_Address_Local1Data_CITY_SUBDIVISION_2
            ,IIF(Local1_Flag='Y',ISNULL(primary_Region_referenceID, ''),'') Home_Address_Local1Data_REGION_ID
			,'' Home_Address_Local1Data_Descriptor
            ,'' Home_Address_Local1Data_Subregion
            ,IIF(Local1_Flag='Y',ISNULL(primary_region_subdivision_1, ''),'')  Home_Address_Local1Data_REGION_SUBDIVISION_1
			,IIF(Local1_Flag='Y',ISNULL(primary_region_subdivision_2, ''),'') Home_Address_Local1Data_REGION_SUBDIVISION_2
            ,IIF(Local1_Flag='Y',IIF(primary_country_code='CHN' AND ISNULL(primary_postalcode, '')='', '000000', ISNULL(primary_postalcode, '')),'') Home_Address_Local1Data_Postal_Code
            ,'' Home_Address_Local1Data_Public
            ,'' Home_Address_Local1Data_Usage

			-----------------------------------------
            ,'' Home_Address_Local2Data_Row
            ,IIF(Local2_Flag='Y',IIF(ISNULL(secondary_effective_date, '')='', '', CONVERT(varchar(10), CAST(secondary_effective_date as date), 101)),'') Home_Address_Local2Data_Effective_Date
            ,IIF(Local2_Flag='Y',ISNULL(secondary_country_code, ''),'')  Home_Address_Local2Data_ISO_Code
            ,IIF(Local2_Flag='Y',ISNULL(Secondary_city, ''),'') Home_Address_Local2Data_CITY
            ,IIF(Local2_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(Secondary_addressline1, 'N'), ''),'') Home_Address_Local2Data_ADDRESS_LINE_1
            ,IIF(Local2_Flag='Y',(CASE
                    WHEN ISNULL(Secondary_country_code, '') in ('CHN','KOR','THA','TWN', 'RUS','UKR','GRC','EGY') THEN dbo.GetNonEnglishName(dbo.RemoveFLCommaCharacter(Secondary_addressLine2, 'N'))
					ELSE ''	  END),'') Home_Address_Local2Data_ADDRESS_LINE_2
            ,IIF(Local2_Flag='Y',IIF(ISNULL(Secondary_country_code, '') = 'JPN', Secondary_OR1KK, ''),'') Home_Address_Local2Data_ADDRESS_LINE_4
            ,IIF(Local2_Flag='Y',IIF(ISNULL(Secondary_country_code, '') = 'JPN', dbo.RemoveFLCommaCharacter(Secondary_addressLine2, 'N'), ''),'') Home_Address_Local2Data_ADDRESS_LINE_5
            ,IIF(Local2_Flag='Y',IIF(ISNULL(Secondary_country_code, '') = 'JPN', Secondary_OR2KK, ''),'') Home_Address_Local2Data_ADDRESS_LINE_6
			,IIF(Local2_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(Secondary_addressline7, 'N'), ''),'') Home_Address_Local2Data_ADDRESS_LINE_7
			,IIF(Local2_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(Secondary_addressline8, 'N'), ''),'') Home_Address_Local2Data_ADDRESS_LINE_8
			,IIF(Local2_Flag='Y',ISNULL(dbo.RemoveFLCommaCharacter(Secondary_addressline9, 'N'), ''),'') Home_Address_Local2Data_ADDRESS_LINE_9

            ,IIF(Local2_Flag='Y',ISNULL(Secondary_city_subdivision, ''),'') Home_Address_Local2Data_CITY_SUBDIVISION_1
			,IIF(Local2_Flag='Y',ISNULL(Secondary_city_subdivision_1, ''),'') Home_Address_Local2Data_CITY_SUBDIVISION_2
            ,IIF(Local2_Flag='Y',ISNULL(Secondary_Region_referenceID, ''),'') Home_Address_Local2Data_REGION_ID
			,'' Home_Address_Local2Data_Descriptor
            ,'' Home_Address_Local2Data_Subregion
            ,IIF(Local2_Flag='Y',ISNULL(secondary_region_subdivision_1, ''),'')  Home_Address_Local2Data_REGION_SUBDIVISION_1
			,IIF(Local2_Flag='Y',ISNULL(secondary_region_subdivision_2, ''),'')  Home_Address_Local2Data_REGION_SUBDIVISION_2
            ,IIF(Local2_Flag='Y',IIF(secondary_country_code='CHN' AND ISNULL(Secondary_postalcode, '')='', '000000', ISNULL(Secondary_postalcode, '')),'') Home_Address_Local2Data_Postal_Code
            ,'' Home_Address_Local2Data_Public
            ,'' Home_Address_Local2Data_Usage		
			
			-----------------------------------------
			/*
            ,'' Home_Address_local3Data_Row
            ,IIF(local3_Flag='Y',IIF(ISNULL(third_effective_date, '')='', '', CONVERT(varchar(10), CAST(third_effective_date as date), 101)),'') Home_Address_local3Data_Effective_Date
            ,IIF(local3_Flag='Y',ISNULL(third_country_code, ''),'')  Home_Address_local3Data_ISO_Code
            ,IIF(local3_Flag='Y',ISNULL(third_city, ''),'') Home_Address_local3Data_CITY
            ,IIF(local3_Flag='Y',ISNULL(third_addressline1, ''),'') Home_Address_local3Data_ADDRESS_LINE_1
            ,IIF(local3_Flag='Y',(CASE
                    WHEN ISNULL(third_country_code, '') in ('CHN','KOR','THA','TWN', 'RUS','UKR','GRC','EGY') THEN dbo.GetNonEnglishName(third_addressLine2)
					ELSE ''	  END),'') Home_Address_local3Data_ADDRESS_LINE_2
            ,IIF(local3_Flag='Y',IIF(ISNULL(third_country_code, '') = 'JPN', third_OR1KK, ''),'') Home_Address_local3Data_ADDRESS_LINE_4
            ,IIF(local3_Flag='Y',IIF(ISNULL(third_country_code, '') = 'JPN', third_addressLine2, ''),'') Home_Address_local3Data_ADDRESS_LINE_5
            ,IIF(local3_Flag='Y',IIF(ISNULL(third_country_code, '') = 'JPN', third_OR2KK, ''),'') Home_Address_local3Data_ADDRESS_LINE_6
			,IIF(local3_Flag='Y',ISNULL(third_addressline7, ''),'') Home_Address_local3Data_ADDRESS_LINE_7
			,IIF(local3_Flag='Y',ISNULL(third_addressline8, ''),'') Home_Address_local3Data_ADDRESS_LINE_8
			,IIF(local3_Flag='Y',ISNULL(third_addressline9, ''),'') Home_Address_local3Data_ADDRESS_LINE_9

            ,IIF(local3_Flag='Y',ISNULL(third_city_subdivision, ''),'') Home_Address_local3Data_CITY_SUBDIVISION_1
			,IIF(local3_Flag='Y',ISNULL(third_city_subdivision_1, ''),'') Home_Address_local3Data_CITY_SUBDIVISION_2
            ,IIF(local3_Flag='Y',ISNULL(third_Region_referenceID, ''),'') Home_Address_local3Data_REGION_ID
			,'' Home_Address_local3Data_Descriptor
            ,'' Home_Address_local3Data_Subregion
            ,IIF(local3_Flag='Y',ISNULL(third_region_subdivision_1, ''),'')  Home_Address_local3Data_REGION_SUBDIVISION_1
			,IIF(local3_Flag='Y',ISNULL(third_region_subdivision_2, ''),'')  Home_Address_local3Data_REGION_SUBDIVISION_2
            ,IIF(local3_Flag='Y',IIF(third_country_code='CHN' AND ISNULL(third_postalcode, '')='', '000000', ISNULL(third_postalcode, '')),'') Home_Address_local3Data_Postal_Code
            ,'' Home_Address_local3Data_Public
            ,'' Home_Address_local3Data_Usage	
			
			-----------------------------------------
            ,'' Home_Address_local4Data_Row
            ,IIF(local4_Flag='Y',IIF(ISNULL(fourth_effective_date, '')='', '', CONVERT(varchar(10), CAST(fourth_effective_date as date), 101)),'') Home_Address_local4Data_Effective_Date
            ,IIF(local4_Flag='Y',ISNULL(fourth_country_code, ''),'')  Home_Address_local4Data_ISO_Code
            ,IIF(local4_Flag='Y',ISNULL(fourth_city, ''),'') Home_Address_local4Data_CITY
            ,IIF(local4_Flag='Y',ISNULL(fourth_addressline1, ''),'') Home_Address_local4Data_ADDRESS_LINE_1
            ,IIF(local4_Flag='Y',(CASE
                    WHEN ISNULL(fourth_country_code, '') in ('CHN','KOR','THA','TWN', 'RUS','UKR','GRC','EGY') THEN dbo.GetNonEnglishName(fourth_addressLine2)
					ELSE ''	  END),'') Home_Address_local4Data_ADDRESS_LINE_2
            ,IIF(local4_Flag='Y',IIF(ISNULL(fourth_country_code, '') = 'JPN', fourth_OR1KK, ''),'') Home_Address_local4Data_ADDRESS_LINE_4
            ,IIF(local4_Flag='Y',IIF(ISNULL(fourth_country_code, '') = 'JPN', fourth_addressLine2, ''),'') Home_Address_local4Data_ADDRESS_LINE_5
            ,IIF(local4_Flag='Y',IIF(ISNULL(fourth_country_code, '') = 'JPN', fourth_OR2KK, ''),'') Home_Address_local4Data_ADDRESS_LINE_6
			,IIF(local4_Flag='Y',ISNULL(fourth_addressline7, ''),'') Home_Address_local4Data_ADDRESS_LINE_7
			,IIF(local4_Flag='Y',ISNULL(fourth_addressline8, ''),'') Home_Address_local4Data_ADDRESS_LINE_8
			,IIF(local4_Flag='Y',ISNULL(fourth_addressline9, ''),'') Home_Address_local4Data_ADDRESS_LINE_9

            ,IIF(local4_Flag='Y',ISNULL(fourth_city_subdivision, ''),'') Home_Address_local4Data_CITY_SUBDIVISION_1
			,IIF(local4_Flag='Y',ISNULL(fourth_city_subdivision_1, ''),'') Home_Address_local4Data_CITY_SUBDIVISION_2
            ,IIF(local4_Flag='Y',ISNULL(fourth_Region_referenceID, ''),'') Home_Address_local4Data_REGION_ID
			,'' Home_Address_local4Data_Descriptor
            ,'' Home_Address_local4Data_Subregion
            ,IIF(local4_Flag='Y',ISNULL(fourth_region_subdivision_1, ''),'')  Home_Address_local4Data_REGION_SUBDIVISION_1
			,IIF(local4_Flag='Y',ISNULL(fourth_region_subdivision_2, ''),'')  Home_Address_local4Data_REGION_SUBDIVISION_2
            ,IIF(local4_Flag='Y',IIF(fourth_country_code='CHN' AND ISNULL(fourth_postalcode, '')='', '000000', ISNULL(fourth_postalcode, '')),'') Home_Address_local4Data_Postal_Code
            ,'' Home_Address_local4Data_Public
            ,'' Home_Address_local4Data_Usage					
			*/	
			--------------------------------------------------------------------
            ,''[PrimaryWorkAddressData_Row]
            ,''[PrimaryWorkAddressData_EffectiveDate]
            ,''[PrimaryWorkAddressData_CountryISOCode]
            ,''[PrimaryWorkAddressData_AddressLine1]
            ,''[PrimaryWorkAddressData_AddressLine2]
            ,''[PrimaryWorkAddressData_City(Municipality)]
            ,''[PrimaryWorkAddressData_SubMunicipalityType]
            ,''[PrimaryWorkAddressData_SubMunicipality]
            ,''[PrimaryWorkAddressData_State(Region)]
            ,''[PrimaryWorkAddressData_SubregionDescriptor]
            ,''[PrimaryWorkAddressData_SubregionType]
            ,''[PrimaryWorkAddressData_Subregion(County)]
            ,''[PrimaryWorkAddressData_PostalCode]
            ,''[PrimaryWorkAddressData_Public]
            ,''[PrimaryWorkAddressData_Usage]

            ,''[WorkAddress2Data_Row]
            ,''[WorkAddress2Data_EffectiveDate]
            ,''[WorkAddress2Data_CountryISOCode]
            ,''[WorkAddress2Data_AddressLine1]
            ,''[WorkAddress2Data_AddressLine2]
            ,''[WorkAddress2Data_City(Municipality)]
            ,''[WorkAddress2Data_SubMunicipalityType]
            ,''[WorkAddress2Data_SubMunicipality]
            ,''[WorkAddress2Data_State(Region)]
            ,''[WorkAddress2Data_SubregionDescriptor]
            ,''[WorkAddress2Data_SubregionType]
            ,''[WorkAddress2Data_Subregion(County)]
            ,''[WorkAddress2Data_PostalCode]
            ,''[WorkAddress2Data_Public]
            ,''[WorkAddress2Data_Usage]
			,'Not Required' [PrimaryRegionValidate]
			,'Not Required' [PrimaryPostalCodeValidate]
			,[Emp - Group]
			,[Emp - Personnel Number]
				
            INTO WD_HR_TR_WorkerAddress 
    FROM WAVE_AM_ADDRESS WHERE PRIMARY_COUNTRY_CODE<>'JPN'

	--Correction for this RE. We are changing Legal country from ARE to MAR
	IF (@which_report='Worker Address') 
	BEGIN
		UPDATE WD_HR_TR_WorkerAddress SET [PrimaryHomeAddressData_CountryISOCode]='MAR' WHERE [ApplicantID]='84000839';
		UPDATE WD_HR_TR_WorkerAddress SET [HomeAddress2Data_CountryISOCode]='MAR' WHERE [ApplicantID]='84000839';
    END
	
	-- Region update for Emergency Contact
	IF (@which_report='Emergency Contact') 
	BEGIN
	   UPDATE WD_HR_TR_WorkerAddress SET [PrimaryHomeAddressData_CountryISOCode]='MAR' WHERE [ApplicantID]='84000839'; 	   
	   UPDATE WD_HR_TR_WorkerAddress SET [PRIMARYHOMEADDRESSDATA_STATE(REGION)]='ARE-DU' WHERE [ApplicantID]='84000383';
	   UPDATE WD_HR_TR_WorkerAddress SET [PRIMARYHOMEADDRESSDATA_STATE(REGION)]='ARE-DU' WHERE [ApplicantID]='84000194';
	   UPDATE WD_HR_TR_WorkerAddress SET [PRIMARYHOMEADDRESSDATA_STATE(REGION)]='ITA-BG' WHERE [ApplicantID]='02116375';
	   UPDATE WD_HR_TR_WorkerAddress SET [PRIMARYHOMEADDRESSDATA_STATE(REGION)]='EGY-SHR' WHERE [ApplicantID]='24000862';
	   UPDATE WD_HR_TR_WorkerAddress SET [PRIMARYHOMEADDRESSDATA_STATE(REGION)]='' WHERE [ApplicantID]='02114255';
	END

	/* Updation is for Emergency Contact */
	UPDATE A1 SET 
	    [PrimaryRegionValidate]=IIF(ISNULL(A2.[Region (State)], '')='Required', 'Required', 'Not Required'),
		[PrimaryPostalCodeValidate]=IIF(ISNULL(A2.[Postal Code], '')='Required', 'Required', 'Not Required')
	FROM WD_HR_TR_WorkerAddress A1 
	   LEFT JOIN W4_ADDRESS_VALIDATION A2 ON A1.[PrimaryHomeAddressData_CountryISOCode]=A2.[Country Code] OR A1.[Home_Address_Local1Data_ISO_Code]=A2.[Country Code]

	/* For Thailand Local Address 2 need to be blank */
    UPDATE WD_HR_TR_WorkerAddress SET
		Home_Address_Local1Data_ADDRESS_LINE_1= ISNULL(Home_Address_Local1Data_ADDRESS_LINE_1, '') + ' ' + ISNULL(Home_Address_Local1Data_ADDRESS_LINE_2, ''),
		Home_Address_Local1Data_ADDRESS_LINE_2='',
		Home_Address_Local2Data_ADDRESS_LINE_1= ISNULL(Home_Address_Local2Data_ADDRESS_LINE_1, '') + ' ' + ISNULL(Home_Address_Local2Data_ADDRESS_LINE_2, ''),
		Home_Address_Local2Data_ADDRESS_LINE_2=''
	WHERE Home_Address_Local1Data_ISO_Code='THA'

    /*Except for Hungary and for the other countries Local Address 1 should not be blank */
    UPDATE WD_HR_TR_WorkerAddress SET
		PrimaryHomeAddressData_AddressLine1= IIF(ISNULL(PrimaryHomeAddressData_AddressLine1, '') = '', ISNULL(PrimaryHomeAddressData_AddressLine2, ''), ISNULL(PrimaryHomeAddressData_AddressLine1, ''))
	WHERE PrimaryHomeAddressData_CountryISOCode <> 'HUN'
    UPDATE WD_HR_TR_WorkerAddress SET
		HomeAddress2Data_AddressLine1= IIF(ISNULL(HomeAddress2Data_AddressLine1, '') = '', ISNULL(HomeAddress2Data_AddressLine2, ''), ISNULL(HomeAddress2Data_AddressLine1, ''))
	WHERE HomeAddress2Data_CountryISOCode <> 'HUN'
    UPDATE WD_HR_TR_WorkerAddress SET
		Home_Address_Local1Data_ADDRESS_LINE_1= IIF(ISNULL(Home_Address_Local1Data_ADDRESS_LINE_1, '') = '', ISNULL(Home_Address_Local1Data_ADDRESS_LINE_2, ''), ISNULL(Home_Address_Local1Data_ADDRESS_LINE_1, ''))
	WHERE Home_Address_Local1Data_ISO_Code <> 'HUN'
    UPDATE WD_HR_TR_WorkerAddress SET
		Home_Address_Local2Data_ADDRESS_LINE_1= IIF(ISNULL(Home_Address_Local2Data_ADDRESS_LINE_1, '') = '', ISNULL(Home_Address_Local2Data_ADDRESS_LINE_2, ''), ISNULL(Home_Address_Local2Data_ADDRESS_LINE_1, ''))
	WHERE Home_Address_Local2Data_ISO_Code <> 'HUN'

    UPDATE WD_HR_TR_WorkerAddress SET
		PrimaryHomeAddressData_AddressLine2= IIF(ISNULL(PrimaryHomeAddressData_AddressLine1, '') = ISNULL(PrimaryHomeAddressData_AddressLine2, ''), '', ISNULL(PrimaryHomeAddressData_AddressLine2, ''))
    UPDATE WD_HR_TR_WorkerAddress SET
		HomeAddress2Data_AddressLine2= IIF(ISNULL(HomeAddress2Data_AddressLine1, '') = ISNULL(HomeAddress2Data_AddressLine2, ''), '', ISNULL(HomeAddress2Data_AddressLine2, ''))

    UPDATE WD_HR_TR_WorkerAddress SET
		Home_Address_Local1Data_ADDRESS_LINE_2= IIF(ISNULL(Home_Address_Local1Data_ADDRESS_LINE_1, '')=ISNULL(Home_Address_Local1Data_ADDRESS_LINE_2, ''), '', ISNULL(Home_Address_Local1Data_ADDRESS_LINE_2, ''))
    UPDATE WD_HR_TR_WorkerAddress SET
		Home_Address_Local2Data_ADDRESS_LINE_2= IIF(ISNULL(Home_Address_Local2Data_ADDRESS_LINE_1, '')=ISNULL(Home_Address_Local2Data_ADDRESS_LINE_2, ''), '', ISNULL(Home_Address_Local2Data_ADDRESS_LINE_2, ''))

	/* Worker Address Error List */
	DELETE FROM ALCON_MIGRATION_ERROR_LIST WHERE Wave=@which_wavestage AND [Report Name]=@which_report;
	INSERT INTO ALCON_MIGRATION_ERROR_LIST
	SELECT @which_wavestage, @which_report, EmployeeID, CountryCC, ErrorText FROM dbo.GetAddressFormat('Wave 4');

    DELETE FROM WD_HR_TR_WorkerAddress WHERE  [LegacySystemID] IN
	(
		SELECT [LegacySystemID]  FROM WD_HR_TR_WorkerAddress WHERE ISNULL(PrimaryHomeAddressData_AddressLine1, '')='' AND ISNULL(PrimaryHomeAddressData_CountryISOCode, '')<>'' AND
		                                                           PrimaryHomeAddressData_CountryISOCode <> 'HUN'
		UNION
		SELECT [LegacySystemID] FROM WD_HR_TR_WorkerAddress WHERE ISNULL(HomeAddress2Data_AddressLine1, '')='' AND ISNULL(HomeAddress2Data_CountryISOCode, '')<>'' AND
		                                                          HomeAddress2Data_CountryISOCode <> 'HUN'
		UNION
		SELECT [LegacySystemID] FROM WD_HR_TR_WorkerAddress WHERE ISNULL(Home_Address_Local1Data_ADDRESS_LINE_1, '')='' AND ISNULL(Home_Address_Local1Data_ISO_Code, '')<>'' AND
		                                                          Home_Address_Local1Data_ISO_Code <> 'HUN'
		UNION
		SELECT [LegacySystemID] FROM WD_HR_TR_WorkerAddress WHERE ISNULL(Home_Address_Local2Data_ADDRESS_LINE_1, '')='' AND ISNULL(Home_Address_Local2Data_ISO_Code, '')<>'' AND
		                                                          Home_Address_Local2Data_ISO_Code <> 'HUN'
		UNION
		SELECT [LegacySystemID]  FROM WD_HR_TR_WorkerAddress WHERE ISNULL(PrimaryHomeAddressData_AddressLine2, '')='' AND ISNULL(PrimaryHomeAddressData_CountryISOCode, '')='HUN'
		UNION
		SELECT [LegacySystemID] FROM WD_HR_TR_WorkerAddress WHERE ISNULL(HomeAddress2Data_AddressLine2, '')='' AND ISNULL(HomeAddress2Data_CountryISOCode, '')='HUN'
		UNION
		SELECT [LegacySystemID] FROM WD_HR_TR_WorkerAddress WHERE ISNULL(Home_Address_Local1Data_ADDRESS_LINE_2, '')='' AND ISNULL(Home_Address_Local1Data_ISO_Code, '')='HUN'
		UNION
		SELECT [LegacySystemID] FROM WD_HR_TR_WorkerAddress WHERE ISNULL(Home_Address_Local2Data_ADDRESS_LINE_2, '')='' AND ISNULL(Home_Address_Local2Data_ISO_Code, '')='HUN'
	)

	SELECT [EmployeeID] [Employee ID Region(Primary) Mismatch with country code], [PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE], [PRIMARYHOMEADDRESSDATA_STATE(REGION)] 
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE], '') <> '' AND ISNULL([PRIMARYHOMEADDRESSDATA_STATE(REGION)], '') <> '' AND
	                [PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE]<>SUBSTRING([PRIMARYHOMEADDRESSDATA_STATE(REGION)], 1, 3)

	SELECT [EmployeeID] [Employee ID Region(Secondary) Mismatch with country code], [HomeAddress2Data_CountryISOCode], [HomeAddress2Data_State(Region)] 
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([HomeAddress2Data_CountryISOCode], '') <> '' AND ISNULL([HomeAddress2Data_State(Region)], '') <> '' AND
	                [HomeAddress2Data_CountryISOCode]<>SUBSTRING([HomeAddress2Data_State(Region)], 1, 3)

	SELECT [EmployeeID] [Employee ID Region(Local 1) Mismatch with country code], [Home_Address_Local1Data_ISO_Code], [Home_Address_Local1Data_REGION_ID]
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([Home_Address_Local1Data_ISO_Code], '') <> '' AND ISNULL([Home_Address_Local1Data_REGION_ID], '') <> '' AND
	                [Home_Address_Local1Data_ISO_Code]<>SUBSTRING([Home_Address_Local1Data_REGION_ID], 1, 3)

	SELECT [EmployeeID] [Employee ID Region(Local 2) Mismatch with country code], [Home_Address_Local2Data_ISO_Code], [Home_Address_Local2Data_REGION_ID]
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([Home_Address_Local2Data_ISO_Code], '') <> '' AND ISNULL([Home_Address_Local2Data_REGION_ID], '') <> '' AND
	                [Home_Address_Local2Data_ISO_Code]<>SUBSTRING([Home_Address_Local2Data_REGION_ID], 1, 3)

	SELECT [EmployeeID] [Employee ID Region(Primary) with blank value], [PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE], [PRIMARYHOMEADDRESSDATA_STATE(REGION)] 
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE], '') <> '' AND ISNULL([PRIMARYHOMEADDRESSDATA_STATE(REGION)], '') = '' AND
	                [PRIMARYHOMEADDRESSDATA_COUNTRYISOCODE] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')

	SELECT [EmployeeID] [Employee ID Region(Secondary) with blank value], [HomeAddress2Data_CountryISOCode], [HomeAddress2Data_State(Region)] 
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([HomeAddress2Data_CountryISOCode], '') <> '' AND ISNULL([HomeAddress2Data_State(Region)], '') = '' AND
	                [HomeAddress2Data_CountryISOCode] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')

	SELECT [EmployeeID] [Employee ID Region(Local 1) with blank value], [Home_Address_Local1Data_ISO_Code], [Home_Address_Local1Data_REGION_ID] 
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([Home_Address_Local1Data_ISO_Code], '') <> '' AND ISNULL([Home_Address_Local1Data_REGION_ID], '') = '' AND
	                [Home_Address_Local1Data_ISO_Code] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')

	SELECT [EmployeeID] [Employee ID Region(Local 2) with blank value], [Home_Address_Local2Data_ISO_Code], [Home_Address_Local2Data_REGION_ID] 
	   FROM WD_HR_TR_WorkerAddress
	   WHERe ISNULL([Home_Address_Local2Data_ISO_Code], '') <> '' AND ISNULL([Home_Address_Local2Data_REGION_ID], '') = '' AND
	                [Home_Address_Local2Data_ISO_Code] IN (SELECT [COUNTRY CODE] FROM W4_ADDRESS_VALIDATION WHERE [Region (State)]='Required')

	--IA changes
	UPDATE WD_HR_TR_WorkerAddress SET [LegacySystemID]=[ApplicantID], [EmployeeID]=[ApplicantID];
	IF (@which_report='Worker Address') UPDATE WD_HR_TR_WorkerAddress SET [ApplicantID]='';

	--Removing Emp group 4
	PRINT 'Removing Emp group 4'
	--DELETE FROM WD_HR_TR_WorkerAddress WHERE [Emp - Group]='4'
END
GO


--EXEC PROC_W3_AUTOMATE_WORKER_ADDRESS_NEW 'W4_P2', 'Worker Address', '2020-10-02'
--EXEC PROC_W3_AUTOMATE_WORKER_ADDRESS_NEW 'W4_GOLD', 'Worker Address', '2021-02-14'
--PrimaryHomeAddressData:[Address Line #1]: Contains "special" character at 31(Apartment no.4, second floor ,‘Eid Salem Building ,15TH May);
--PrimaryHomeAddressData:[Address Line #1]: Contains "special" character at 21(3 said ben Amer st. – Suhag);
--SELECT * FROM WD_HR_TR_WorkerAddress ORDER BY [EmployeeID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE EmployeeID IN ('84000839', '02114255', '02116375', '02103634') ORDER BY [EmployeeID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE [Home_Address_Local1Data_ISO_Code]='PAK' ORDER BY [EmployeeID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE [Home_Address_Local1Data_ADDRESS_LINE_1]<>'' ORDER BY [EmployeeID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE [Emp - Group] IN ('3', '4') ORDER BY [EmployeeID]
--SELECT * FROM REGION_MAPPING_LKUP WHERE PERNR IN ('84000194', '02103634')
--SELECT DISTINCT LOCAT, POSTA FROM PRIMARY_ADDRESS_PA0006 WHERE PERNR LIKE '06%'
--SELECT LAND1,CTR,COUNC,CCD,RCTVC,MC FROM PRIMARY_ADDRESS_PA0006 WHERE PERNR LIKE '15%'
--SELECT PERNR, LAND1, CC, ORT01, CITY, STATE, REG, IT_STREETNUM FROM PRIMARY_ADDRESS_PA0006 WHERE LAND1 IN ('TR', 'VN', 'PK', 'BD')
--SELECT * FROM W4_ITALY_STREET_NUMBER_LKUP
--SELECT * FROM W4_P2_PA0006
--DECLARE @Value AS NVARCHAR(2000)='KORTEJOKI,'
--SET @Value=IIF(SUBSTRING(@Value, LEN(@Value), 1)=',', SUBSTRING(@Value, 1, LEN(@Value)-1), @Value);
--PRINT @Value
--PrimaryHomeAddressData:[Address Line #1]: Contains "special" character at 31(Apartment no.4, second floor ,‘Eid Salem Building ,15TH May);
--PRINT SUBSTRING(@Value, LEN(@Value), 1)
--SELECT * FROM ALCON_MIGRATION_ERROR_LIST WHERE Wave='W4_P2' AND [Report Name]='Worker Address' ORDER BY [Employee ID]
--SELECT * FROM WD_HR_TR_WorkerAddress WHERE [EmployeeID] IN ('84000368', '46001306', '02105801', '84000615')
--SELECT * FROM SET_ADDRESS_FIELD_MAPPING_DONE WHERE ISO2='RS'
--SELECT DISTINCt PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA FROM W4_P2_PA0006 WHERE begDa<=CAST('2020-10-02' as date) and endda>=CAST('2020-10-02' as date) AND SUBTY In (1, 5)
--SELECT DISTINCt PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA, RCTVC FROM W4_P2_PA0006 WHERE PERNR IN ('15501117', '46001306', '84000615', '02105801') AND begDa<=CAST('2020-10-02' as date) and endda>=CAST('2020-10-02' as date) AND SUBTY In ('1', '5')
--SELECT DISTINCt PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA FROM W4_P2_PA0006 WHERE PERNR like '15%' AND begDa<=CAST('2020-10-02' as date) and endda>=CAST('2020-10-02' as date) AND SUBTY In (1, 5)
--SELECT DISTINCt PERNR, SUBTY, STRAS, LOCAT, LAND1, STATE, COUNC, ORT01, PSTLZ, HSNMR, BLDNG, FLOOR, POSTA FROM W4_P2_PA0006 WHERE PERNR IN (SELECT [ApplicantID] FROM  WD_HR_TR_WORKERADDRESS_EMPGROUP_04) AND begDa<=CAST('2020-10-02' as date) and endda>=CAST('2020-10-02' as date) AND SUBTY In ('1', '5')
--SELECT * FROM  WD_HR_TR_WORKERADDRESS_EMPGROUP_04

--SELECT * FROM W4_ADDRESS_VALIDATION
--SELECT * FROM (
--SELECT *, 'All' Flag FROM WD_HR_TR_WorkerAddress WHERE ApplicantID IN (SELECT ApplicantID FROM WD_HR_TR_WORKERADDRESS_EMPGROUP_04)
--UNION ALL
--SELECT *, 'Region' Flag FROM WD_HR_TR_WorkerAddress WHERE 
--             ([PrimaryHomeAddressData_State(Region)] IN (SELECT DISTINCT [Region Code] FROM [W4_MISSING_REGION_MAPPING_FOR_ADDRESS]) OR
--			  [HomeAddress2Data_STATE(REGION)] IN (SELECT DISTINCT [Region Code] FROM [W4_MISSING_REGION_MAPPING_FOR_ADDRESS]) OR
--			  [Home_Address_Local1Data_REGION_ID] IN (SELECT DISTINCT [Region Code] FROM [W4_MISSING_REGION_MAPPING_FOR_ADDRESS]) OR
--			  [Home_Address_Local2Data_REGION_ID] IN (SELECT DISTINCT [Region Code] FROM [W4_MISSING_REGION_MAPPING_FOR_ADDRESS]))
--UNION ALL
--SELECT *, 'All' Flag FROM WD_HR_TR_WorkerAddress WHERE ApplicantID IN (SELECT [EmployeeID] FROM AddressLine3And4)
--) A1
--ORDER BY EMPLOYEEID

--SELECT [EmployeeID], 'Address' Flag INTO AddressLine3And4 FROM WD_HR_TR_WorkerAddress WHERE 
--             ([PrimaryHomeAddressData_CountryISOCode] IN ('SVK', 'NLD', 'DNK') OR
--			  [HomeAddress2Data_COUNTRYISOCODE] IN ('SVK', 'NLD', 'DNK') OR
--			  [Home_Address_Local1Data_ISO_Code] IN ('SVK', 'NLD', 'DNK') OR
--			  [Home_Address_Local2Data_ISO_Code] IN ('SVK', 'NLD', 'DNK')) AND
--			  (PrimaryHomeAddressData_AddressLine3 <> '' OR PrimaryHomeAddressData_AddressLine4 <> '')

--SELECT DISTINCT a.Persno, 
--(case when country_1 in ('DK','EE','FI','IL','MA','NL','NO','PL','RO','RU','SA','SK','UA') then houseno_1 end) primary_addressline3,
--(case when country_1 in ('NL','PL','RO','RU','SK','UA') then apartment_1 end) primary_addressline4,
--(case when country_2 in ('DK','EE','FI','IL','MA','NL','NO','PL','RO','RU','SA','SK','UA') then houseno_2 end) secondary_Addressline3,
--(case when country_2 in ('NL','PL','RO','RU','SK','UA') then apartment_2 end) secondary_Addressline4
--from WAVE_AM_address_source a
--join temp_transposed b
--on a.persno = b.persno
--WHERE ISNULL(primary_addressline3, '') <> '' OR ISNULL(primary_addressline4, '') <> '' OR ISNULL(secondary_Addressline3, '') <> '' OR ISNULL(secondary_Addressline4, '') <> ''

--SELECT * FROM [SET_ADDRESS_FIELD_MAPPING] WHERE ISO2 IN ('EG','SK') ORDER BY ISO2
--SELECT * FROM [SET_ADDRESS_FIELD_MAPPING_BASIC] WHERE ISO2 IN ('EG','SK') ORDER BY ISO2 

--SELECT ISO2, SRC_FIELD, SRC_MAP_FIELD, DST_FIELD, DST_MAP_FIELD, 
--		ROW_NUMBER() OVER(PARTITION BY ISO2, DST_MAP_FIELD ORDER BY ISO2, DST_MAP_FIELD) [INDEX] INTO [SET_ADDRESS_FIELD_MAPPING_CHECKING] FROM ( 
--	SELECT *, ROW_NUMBER() OVER(PARTITION BY ISO2, SRC_MAP_FIELD ORDER BY ISO2, SRC_MAP_FIELD) REPEAT_SRC FROM (
--		SELECT *, ROW_NUMBER() OVER(PARTITION BY ISO2, SRC_MAP_FIELD, DST_MAP_FIELD ORDER BY ISO2, SRC_MAP_FIELD, DST_MAP_FIELD, ORD DESC) REPEAT_ROW FROM (
--			SELECT *, 1 ORD FROM [SET_ADDRESS_FIELD_MAPPING]
--			UNION ALL
--			SELECT *, 2 ORD FROM [SET_ADDRESS_FIELD_MAPPING_BASIC]
--		) A1 WHERE ISNULL(SRC_MAP_FIELD, '') <> '' AND ISNULL(DST_MAP_FIELD, '') <> ''
--	) A2 WHERE REPEAT_ROW=1
--) A3 ORDER BY ISO2, SRC_MAP_FIELD, DST_MAP_FIELD

--UPDATE [SET_ADDRESS_FIELD_MAPPING_CHECKING] SET OPERATION='MAPPING'
--SELECT * INTO [SET_ADDRESS_FIELD_MAPPING_DONE] FROM [SET_ADDRESS_FIELD_MAPPING_CHECKING] 


