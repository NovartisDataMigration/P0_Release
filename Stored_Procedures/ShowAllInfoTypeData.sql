USE Prod_DataClean
GO

IF OBJECT_ID ( 'ShowAllInfoTypeData', 'P' ) IS NOT NULL   
    DROP PROCEDURE ShowAllInfoTypeData;  
GO
CREATE PROCEDURE [dbo].[ShowAllInfoTypeData]
     @which_wavestage AS VARCHAR(50)
AS
BEGIN
--EXEC ShowAllInfoTypeData 'P0'
--SELECT * FROM [WAVE_NM_ALL_INFO_TYPE] ORDER BY RowID

--SELECT * FROM GV_HRP7404 WHERE [CL.]<>'200'
--GV_HRP7404, GV_T582S

	DECLARE @SQL AS VARCHAR(MAX)='drop table if exists WAVE_NM_POSITION_MANAGEMENT_BASE;
	                              drop table if exists WAVE_NM_INFOTYPE;';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
	SET @SQL='SELECT * INTO WAVE_NM_POSITION_MANAGEMENT_BASE FROM '+@which_wavestage+'_POSITION_MANAGEMENT';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;


	DECLARE @FIELD_COUNT AS VARCHAR(20)=''
	DECLARE @PERNR_FLAG AS VARCHAR(5)='';
	DECLARE @MANDT_FLAG AS VARCHAR(5)='Y';
	DECLARE @COLUMN AS VARCHAR(MAX)='';
	DECLARE @SELECT_COLUMN AS VARCHAR(MAX)='';
	DECLARE @COLUMN_DESCRIPTION AS VARCHAR(MAX)='';
	DECLARE @INSERT_COLUMN AS VARCHAR(MAX)='';
	DECLARE @EMPTY_ROW AS VARCHAR(MAX)='';
	DECLARE @BLANK_ROW AS VARCHAR(MAX)='';
	DECLARE @TABLE_CATALOG AS VARCHAR(500)='';
	DECLARE @TABLE_NAME AS VARCHAR(500)='';
	DECLARE @PREVIOUS_TABLE_NAME AS VARCHAR(500)='';
	DECLARE @COLUMN_NAME AS VARCHAR(500)='';
	DECLARE @SHORT_DESCRIPTION AS VARCHAR(500)='';
	DECLARE @infotypeDescription AS VARCHAR(500)='';
	DECLARE @ORDINAL_POSITION AS INT =0;

	DECLARE @FCount AS INT=0;

	SELECT TOP 1 @FIELD_COUNT=FIELD_COUNT FROM (
		SELECT DISTINCT TABLE_CATALOG, TABLE_NAME, COUNT(COLUMN_NAME) FIELD_COUNT
			FROM INFORMATION_SCHEMA.COLUMNS
			WHERE TABLE_NAME LIKE 'GV_%' AND TABLE_CATALOG='Prod_DataClean'
			GROUP BY TABLE_CATALOG, TABLE_NAME
	) A1
	ORDER BY FIELD_COUNT DESC

	WHILE @FCount <= @FIELD_COUNT
	BEGIN
		 SET @COLUMN=@COLUMN+',[COLUMN'+CAST(@FCount AS VARCHAR(10))+']  [NVARCHAR](MAX)';
		 SET @FCount=@FCount+1;
	END

	PRINT @FIELD_COUNT
	SET @SQL='drop table if exists [WAVE_NM_ALL_INFO_TYPE];';
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

	SET @SQL='
		CREATE TABLE [dbo].[WAVE_NM_ALL_INFO_TYPE](
		   RowID int IDENTITY(1, 1)'
		   +@COLUMN+
		') ON [PRIMARY]'
	EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL

	--SELECT * FROM INFORMATION_SCHEMA.COLUMNS
	--SELECT * FROM WAVE_NM_ALL_INFO_TYPE

	PRINT 'START';
	--INSERT INTO P0_DD03M([TABLE NAME], [Field Name], [Short Description]) VALUES('PA0002', 'GESCH', 'Gender');
	--INSERT INTO P0_DD03M([TABLE NAME], [Field Name], [Short Description]) VALUES('PA0021', 'FASEX', 'Gender');

	SET @COLUMN='';
	SET @FCount=0;
	DECLARE cursor_item CURSOR FOR 
					SELECT DISTINCT A1.TABLE_CATALOG, A1.TABLE_NAME, A1.COLUMN_NAME, A1.ORDINAL_POSITION, A2.[SHORT DESCRIPTION]
						FROM INFORMATION_SCHEMA.COLUMNS A1 LEFT JOIN P0_DD03M A2 ON SUBSTRING(A1.TABLE_NAME, CHARINDEX('_', A1.TABLE_NAME)+1, LEN(A1.TABLE_NAME))=A2.[TABLE NAME] AND
																					A1.[COLUMN_NAME]=A2.[FIELD NAME]                                
						WHERE TABLE_NAME LIKE 'GV_%' AND TABLE_CATALOG='Prod_DataClean'
						ORDER BY TABLE_CATALOG, TABLE_NAME, ORDINAL_POSITION
	OPEN cursor_item;
	FETCH NEXT FROM cursor_item INTO @TABLE_CATALOG, @TABLE_NAME, @COLUMN_NAME, @ORDINAL_POSITION, @SHORT_DESCRIPTION;
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @PREVIOUS_TABLE_NAME='' 
		BEGIN 
		   SET @PREVIOUS_TABLE_NAME=@TABLE_NAME
		END
		IF (@PREVIOUS_TABLE_NAME<>@TABLE_NAME)
		BEGIN
		    EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH 'drop table if exists WAVE_NM_INFOTYPE;'
			SET @SQL='SELECT * INTO WAVE_NM_INFOTYPE FROM '+@PREVIOUS_TABLE_NAME;
			EXEC PROC_EXECUTE_STRING_SQL_WITH_BATCH @SQL;
			BEGIN TRY
			    SET @SQL='DELETE FROM WAVE_NM_INFOTYPE WHERE MANDT=''CL.'''
			    EXEC(@SQL);
			END TRY  
			BEGIN CATCH  
				SELECT  
					 @PREVIOUS_TABLE_NAME [Table Name]
					,ERROR_NUMBER() AS ErrorNumber  
					,ERROR_SEVERITY() AS ErrorSeverity  
					,ERROR_STATE() AS ErrorState  
					,ERROR_PROCEDURE() AS ErrorProcedure  
					,ERROR_LINE() AS ErrorLine  
					,ERROR_MESSAGE() AS ErrorMessage;
			END CATCH
			PRINT @BLANK_ROW;
			PRINT @EMPTY_ROW;
			PRINT @COLUMN;
			PRINT @COLUMN_DESCRIPTION;
			SET @SQL='INSERT INTO [WAVE_NM_ALL_INFO_TYPE]('+SUBSTRING(@INSERT_COLUMN, 2, LEN(@INSERT_COLUMN))+') SELECT '+SUBSTRING(@BLANK_ROW, 2, LEN(@BLANK_ROW)); 
			EXEC(@SQL);
			SET @SQL='INSERT INTO [WAVE_NM_ALL_INFO_TYPE]('+SUBSTRING(@INSERT_COLUMN, 2, LEN(@INSERT_COLUMN))+') SELECT '+SUBSTRING(@EMPTY_ROW, 2, LEN(@EMPTY_ROW)); 
			EXEC(@SQL);
			SET @SQL='INSERT INTO [WAVE_NM_ALL_INFO_TYPE]('+SUBSTRING(@INSERT_COLUMN, 2, LEN(@INSERT_COLUMN))+') SELECT '+SUBSTRING(@COLUMN, 2, LEN(@COLUMN)); 
			EXEC(@SQL);
			SET @SQL='INSERT INTO [WAVE_NM_ALL_INFO_TYPE]('+SUBSTRING(@INSERT_COLUMN, 2, LEN(@INSERT_COLUMN))+') SELECT '+SUBSTRING(@COLUMN_DESCRIPTION, 2, LEN(@COLUMN_DESCRIPTION)); 
			EXEC(@SQL);
			IF (@PERNR_FLAG='Y')
			BEGIN
				SET @SQL='INSERT INTO [WAVE_NM_ALL_INFO_TYPE]('+SUBSTRING(@INSERT_COLUMN, 2, LEN(@INSERT_COLUMN))+')
						  SELECT '+SUBSTRING(@SELECT_COLUMN, 2, LEN(@SELECT_COLUMN))+' FROM (
							  SELECT A1.*, A2.[GEO - COUNTRY (CC)], ROW_NUMBER() OVER(PARTITION BY A2.[GEO - COUNTRY (CC)] ORDER BY A2.[GEO - COUNTRY (CC)]) RNUM
								   FROM WAVE_NM_INFOTYPE A1 LEFT JOIN WAVE_NM_POSITION_MANAGEMENT_BASE A2 ON A1.PERNR=A2.[Emp - Personnel Number]
						   ) A3 WHERE RNUM <= 2 AND [GEO - COUNTRY (CC)] IN (''CH'', ''DE'', ''FR'', ''US'', ''IN'');'
				PRINT @SQL;
				BEGIN TRY
					EXEC(@SQL);
					IF (@@ROWCOUNT <= 0)
					BEGIN
						SET @SQL='INSERT INTO [WAVE_NM_ALL_INFO_TYPE]('+SUBSTRING(@INSERT_COLUMN, 2, LEN(@INSERT_COLUMN))+')
							  SELECT TOP 5 '+SUBSTRING(@SELECT_COLUMN, 2, LEN(@SELECT_COLUMN))+' FROM WAVE_NM_INFOTYPE';
						PRINT @SQL;
						BEGIN TRY
							EXEC(@SQL);
						END TRY  
						BEGIN CATCH  
							SELECT  
								 @PREVIOUS_TABLE_NAME [Table Name]
								,ERROR_NUMBER() AS ErrorNumber  
								,ERROR_SEVERITY() AS ErrorSeverity  
								,ERROR_STATE() AS ErrorState  
								,ERROR_PROCEDURE() AS ErrorProcedure  
								,ERROR_LINE() AS ErrorLine  
								,ERROR_MESSAGE() AS ErrorMessage;
						END CATCH
					END
				END TRY  
				BEGIN CATCH  
					SELECT  
						 @PREVIOUS_TABLE_NAME [Table Name]
						,ERROR_NUMBER() AS ErrorNumber  
						,ERROR_SEVERITY() AS ErrorSeverity  
						,ERROR_STATE() AS ErrorState  
						,ERROR_PROCEDURE() AS ErrorProcedure  
						,ERROR_LINE() AS ErrorLine  
						,ERROR_MESSAGE() AS ErrorMessage;
				END CATCH
			END
			IF (@PERNR_FLAG='')
			BEGIN
				SET @SQL='INSERT INTO [WAVE_NM_ALL_INFO_TYPE]('+SUBSTRING(@INSERT_COLUMN, 2, LEN(@INSERT_COLUMN))+')
						SELECT TOP 5 '+SUBSTRING(@SELECT_COLUMN, 2, LEN(@SELECT_COLUMN))+' FROM WAVE_NM_INFOTYPE';
				PRINT @SQL;
				BEGIN TRY 
					EXEC(@SQL);
				END TRY  
				BEGIN CATCH  
					SELECT  
						 @PREVIOUS_TABLE_NAME [Table Name]
						,ERROR_NUMBER() AS ErrorNumber  
						,ERROR_SEVERITY() AS ErrorSeverity  
						,ERROR_STATE() AS ErrorState  
						,ERROR_PROCEDURE() AS ErrorProcedure  
						,ERROR_LINE() AS ErrorLine  
						,ERROR_MESSAGE() AS ErrorMessage;
				END CATCH
			END

			SET @PREVIOUS_TABLE_NAME=@TABLE_NAME;
			SET @SELECT_COLUMN='';
			SET @INSERT_COLUMN='';
			SET @EMPTY_ROW='';
			SET @BLANK_ROW='';
			SET @COLUMN='';
			SET @COLUMN_DESCRIPTION='';
			SET @PERNR_FLAG='';
			SET @MANDT_FLAG='Y';
			SET @FCount=0;
		END

		IF (@ORDINAL_POSITION=1)
		BEGIN
			SET @infotypeDescription='';
			select @infotypeDescription=[infotype text] from GV_T582S where right(@TABLE_NAME,4)=itype
			if @infotypeDescription='' 
			Begin 
				select @infotypeDescription=[infotype name] from GV_T777T where right(@TABLE_NAME,4)=it
			End
			SET @infotypeDescription=REPLACE(@infotypeDescription, '''', '''''');
			SET @EMPTY_ROW=@EMPTY_ROW + ','''+SUBSTRING(@TABLE_NAME, CHARINDEX('_', @TABLE_NAME)+1, LEN(@TABLE_NAME))+IIF(@infotypeDescription='', '', '('+@infotypeDescription+')')+'''';
		END
		ELSE SET @EMPTY_ROW=@EMPTY_ROW + ',''''';
		SET @BLANK_ROW=@BLANK_ROW + ',''''';

		IF (@COLUMN_NAME='[Cl.]') SET @MANDT_FLAG='N';
		SET @COLUMN=@COLUMN+','''+@COLUMN_NAME+'''';
		SET @COLUMN_DESCRIPTION=@COLUMN_DESCRIPTION+','''+REPLACE(ISNULL(@SHORT_DESCRIPTION,''''), '''', '''''')+'''';
		SET @SELECT_COLUMN=@SELECT_COLUMN+',['+@COLUMN_NAME+']';
		IF (@COLUMN_NAME='PERNR') SET @PERNR_FLAG='Y';
		SET @INSERT_COLUMN=@INSERT_COLUMN+',[COLUMN'+CAST(@FCount AS VARCHAR(10))+']'
		SET @FCount=@FCount+1;

		FETCH NEXT FROM cursor_item INTO @TABLE_CATALOG, @TABLE_NAME, @COLUMN_NAME, @ORDINAL_POSITION, @SHORT_DESCRIPTION;;
	END
	CLOSE cursor_item; 
	DEALLOCATE cursor_item;

	SET @FCount=0;
	SET @SQL='';
	WHILE @FCount <= @FIELD_COUNT
	BEGIN
		 SET @COLUMN='[COLUMN'+CAST(@FCount AS VARCHAR(10))+']';
		 SET @SQL=@SQL+'UPDATE [WAVE_NM_ALL_INFO_TYPE] SET '+@COLUMN+'='''' WHERE '+@COLUMN+' IS NULL;'
		 SET @FCount=@FCount+1;
	END
	IF (@SQL<>'') EXEC(@SQL);

	PRINT 'END'

END
GO






